{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { createCV, updateCV, fetchAllCVs, deleteCV } from \"../services/api\"; // Importer nødvendige API-funksjoner\n// import InputField from \"../components/InputField\"; // Sørg for at du har en InputField-komponent\n\n// const UserCV = () => {\n//     const [cv, setCv] = useState({\n//       personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//       skills: [],\n//       education: [{ institution: \"\", degree: \"\", year: \"\" }],\n//       experience: [{ title: \"\", company: \"\", years: \"\" }],\n//     });\n//     const [loading, setLoading] = useState(false);\n//     const [isEditing, setIsEditing] = useState(false);\n//     const { id } = useParams();\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//       if (id) {\n//         setIsEditing(true);\n//         fetchCV();\n//       }\n//     }, [id]);\n\n//     const fetchCV = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await fetchAllCVs();\n//         const userCV = response.find((cv) => cv._id === id);\n//         if (userCV) {\n//           setCv(userCV);\n//         }\n//       } catch (error) {\n//         console.error(\"Feil ved henting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleChange = (e) => {\n//       const { name, value } = e.target;\n//       const [mainKey, subKey] = name.split('.'); // For å håndtere nested felter som \"personalInfo.name\"\n\n//       setCv((prevCv) => ({\n//         ...prevCv,\n//         [mainKey]: {\n//           ...prevCv[mainKey],\n//           [subKey]: value,\n//         },\n//       }));\n//     };\n\n//     const handleSkillChange = (e) => {\n//       setCv({\n//         ...cv,\n//         skills: e.target.value.split(\", \"),\n//       });\n//     };\n\n//     const handleEducationChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedEducation = [...cv.education];\n//       updatedEducation[index][name] = value;\n//       setCv({ ...cv, education: updatedEducation });\n//     };\n\n//     const handleExperienceChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedExperience = [...cv.experience];\n//       updatedExperience[index][name] = value;\n//       setCv({ ...cv, experience: updatedExperience });\n//     };\n\n//     const handleAddEducation = () => {\n//       setCv({\n//         ...cv,\n//         education: [...cv.education, { institution: \"\", degree: \"\", year: \"\" }],\n//       });\n//     };\n\n//     const handleAddExperience = () => {\n//       setCv({\n//         ...cv,\n//         experience: [...cv.experience, { title: \"\", company: \"\", years: \"\" }],\n//       });\n//     };\n\n//     const handleSubmit = async (e) => {\n//       e.preventDefault();\n//       setLoading(true);\n//       try {\n//         if (isEditing) {\n//           await updateCV(id, cv);\n//         } else {\n//           await createCV(cv);\n//         }\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter oppretting/oppdatering\n//       } catch (error) {\n//         console.error(\"Feil ved lagring av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleDelete = async () => {\n//       setLoading(true);\n//       try {\n//         await deleteCV(id);\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter sletting\n//       } catch (error) {\n//         console.error(\"Feil ved sletting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     return (\n//       <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//         <h1 className=\"mb-20 flex items-center justify-center text-3xl font-bold text-[#023E8A]\">\n//           {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//         </h1>\n\n//         {loading && <p>Lasting...</p>}\n\n//         <form\n//           onSubmit={handleSubmit}\n//           className=\"max-w-lg p-10 mb-8 bg-white rounded-lg shadow-lg \"\n//         >\n//           <h2 className=\"text-center mb-4 text-xl text-[#023E8A]\">\n//             {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//           </h2>\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Navn\"\n//             name=\"personalInfo.name\"\n//             value={cv.personalInfo.name}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"email\"\n//             placeholder=\"E-post\"\n//             name=\"personalInfo.email\"\n//             value={cv.personalInfo.email}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Telefonnummer\"\n//             name=\"personalInfo.phone\"\n//             value={cv.personalInfo.phone}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Ferdigheter (separert med komma)\"\n//             value={cv.skills.join(\", \")}\n//             onChange={handleSkillChange}\n//           />\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Utdanning:</h3>\n//           {cv.education.map((edu, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Institusjon\"\n//                 name=\"institution\"\n//                 value={edu.institution}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Grad\"\n//                 name=\"degree\"\n//                 value={edu.degree}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"year\"\n//                 value={edu.year}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddEducation}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til utdanning\n//           </button>\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Erfaring:</h3>\n//           {cv.experience.map((exp, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Tittel\"\n//                 name=\"title\"\n//                 value={exp.title}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Selskap\"\n//                 name=\"company\"\n//                 value={exp.company}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"years\"\n//                 value={exp.years}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddExperience}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til erfaring\n//           </button>\n\n//           <div className=\"flex justify-center w-full\">\n//             <button\n//               type=\"submit\"\n//               className=\"mt-8 p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//             >\n//               {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//             </button>\n//           </div>\n//         </form>\n\n//         {isEditing && (\n//           <button\n//             onClick={handleDelete}\n//             className=\"mt-4 px-4 py-2 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-4 focus:ring-[#CAF0F8]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </div>\n//     );\n//   };\n\n//   export default UserCV;","map":{"version":3,"names":[],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { createCV, updateCV, fetchAllCVs, deleteCV } from \"../services/api\"; // Importer nødvendige API-funksjoner\n// import InputField from \"../components/InputField\"; // Sørg for at du har en InputField-komponent\n\n// const UserCV = () => {\n//     const [cv, setCv] = useState({\n//       personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//       skills: [],\n//       education: [{ institution: \"\", degree: \"\", year: \"\" }],\n//       experience: [{ title: \"\", company: \"\", years: \"\" }],\n//     });\n//     const [loading, setLoading] = useState(false);\n//     const [isEditing, setIsEditing] = useState(false);\n//     const { id } = useParams();\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//       if (id) {\n//         setIsEditing(true);\n//         fetchCV();\n//       }\n//     }, [id]);\n\n//     const fetchCV = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await fetchAllCVs();\n//         const userCV = response.find((cv) => cv._id === id);\n//         if (userCV) {\n//           setCv(userCV);\n//         }\n//       } catch (error) {\n//         console.error(\"Feil ved henting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleChange = (e) => {\n//       const { name, value } = e.target;\n//       const [mainKey, subKey] = name.split('.'); // For å håndtere nested felter som \"personalInfo.name\"\n\n//       setCv((prevCv) => ({\n//         ...prevCv,\n//         [mainKey]: {\n//           ...prevCv[mainKey],\n//           [subKey]: value,\n//         },\n//       }));\n//     };\n\n//     const handleSkillChange = (e) => {\n//       setCv({\n//         ...cv,\n//         skills: e.target.value.split(\", \"),\n//       });\n//     };\n\n//     const handleEducationChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedEducation = [...cv.education];\n//       updatedEducation[index][name] = value;\n//       setCv({ ...cv, education: updatedEducation });\n//     };\n\n//     const handleExperienceChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedExperience = [...cv.experience];\n//       updatedExperience[index][name] = value;\n//       setCv({ ...cv, experience: updatedExperience });\n//     };\n\n//     const handleAddEducation = () => {\n//       setCv({\n//         ...cv,\n//         education: [...cv.education, { institution: \"\", degree: \"\", year: \"\" }],\n//       });\n//     };\n\n//     const handleAddExperience = () => {\n//       setCv({\n//         ...cv,\n//         experience: [...cv.experience, { title: \"\", company: \"\", years: \"\" }],\n//       });\n//     };\n\n//     const handleSubmit = async (e) => {\n//       e.preventDefault();\n//       setLoading(true);\n//       try {\n//         if (isEditing) {\n//           await updateCV(id, cv);\n//         } else {\n//           await createCV(cv);\n//         }\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter oppretting/oppdatering\n//       } catch (error) {\n//         console.error(\"Feil ved lagring av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleDelete = async () => {\n//       setLoading(true);\n//       try {\n//         await deleteCV(id);\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter sletting\n//       } catch (error) {\n//         console.error(\"Feil ved sletting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     return (\n//       <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//         <h1 className=\"mb-20 flex items-center justify-center text-3xl font-bold text-[#023E8A]\">\n//           {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//         </h1>\n\n//         {loading && <p>Lasting...</p>}\n\n//         <form\n//           onSubmit={handleSubmit}\n//           className=\"max-w-lg p-10 mb-8 bg-white rounded-lg shadow-lg \"\n//         >\n//           <h2 className=\"text-center mb-4 text-xl text-[#023E8A]\">\n//             {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//           </h2>\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Navn\"\n//             name=\"personalInfo.name\"\n//             value={cv.personalInfo.name}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"email\"\n//             placeholder=\"E-post\"\n//             name=\"personalInfo.email\"\n//             value={cv.personalInfo.email}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Telefonnummer\"\n//             name=\"personalInfo.phone\"\n//             value={cv.personalInfo.phone}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Ferdigheter (separert med komma)\"\n//             value={cv.skills.join(\", \")}\n//             onChange={handleSkillChange}\n//           />\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Utdanning:</h3>\n//           {cv.education.map((edu, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Institusjon\"\n//                 name=\"institution\"\n//                 value={edu.institution}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Grad\"\n//                 name=\"degree\"\n//                 value={edu.degree}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"year\"\n//                 value={edu.year}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddEducation}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til utdanning\n//           </button>\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Erfaring:</h3>\n//           {cv.experience.map((exp, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Tittel\"\n//                 name=\"title\"\n//                 value={exp.title}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Selskap\"\n//                 name=\"company\"\n//                 value={exp.company}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"years\"\n//                 value={exp.years}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddExperience}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til erfaring\n//           </button>\n\n//           <div className=\"flex justify-center w-full\">\n//             <button\n//               type=\"submit\"\n//               className=\"mt-8 p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//             >\n//               {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//             </button>\n//           </div>\n//         </form>\n\n//         {isEditing && (\n//           <button\n//             onClick={handleDelete}\n//             className=\"mt-4 px-4 py-2 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-4 focus:ring-[#CAF0F8]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </div>\n//     );\n//   };\n\n//   export default UserCV;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}