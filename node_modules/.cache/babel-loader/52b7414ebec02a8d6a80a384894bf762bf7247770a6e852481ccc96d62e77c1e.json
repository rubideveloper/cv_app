{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { createCV, updateCV, fetchAllCVs, deleteCV } from \"../services/api\"; // Importer nødvendige API-funksjoner\n// import InputField from \"../components/InputField\"; // Sørg for at du har en InputField-komponent\n\n// const UserCV = () => {\n//     const [cv, setCv] = useState({\n//       personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//       skills: [],\n//       education: [{ institution: \"\", degree: \"\", year: \"\" }],\n//       experience: [{ title: \"\", company: \"\", years: \"\" }],\n//     });\n//     const [loading, setLoading] = useState(false);\n//     const [isEditing, setIsEditing] = useState(false);\n//     const { id } = useParams();\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//       if (id) {\n//         setIsEditing(true);\n//         fetchCV();\n//       }\n//     }, [id]);\n\n//     const fetchCV = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await fetchAllCVs();\n//         const userCV = response.find((cv) => cv._id === id);\n//         if (userCV) {\n//           setCv(userCV);\n//         }\n//       } catch (error) {\n//         console.error(\"Feil ved henting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleChange = (e) => {\n//       const { name, value } = e.target;\n//       const [mainKey, subKey] = name.split('.'); // For å håndtere nested felter som \"personalInfo.name\"\n\n//       setCv((prevCv) => ({\n//         ...prevCv,\n//         [mainKey]: {\n//           ...prevCv[mainKey],\n//           [subKey]: value,\n//         },\n//       }));\n//     };\n\n//     const handleSkillChange = (e) => {\n//       setCv({\n//         ...cv,\n//         skills: e.target.value.split(\", \"),\n//       });\n//     };\n\n//     const handleEducationChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedEducation = [...cv.education];\n//       updatedEducation[index][name] = value;\n//       setCv({ ...cv, education: updatedEducation });\n//     };\n\n//     const handleExperienceChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedExperience = [...cv.experience];\n//       updatedExperience[index][name] = value;\n//       setCv({ ...cv, experience: updatedExperience });\n//     };\n\n//     const handleAddEducation = () => {\n//       setCv({\n//         ...cv,\n//         education: [...cv.education, { institution: \"\", degree: \"\", year: \"\" }],\n//       });\n//     };\n\n//     const handleAddExperience = () => {\n//       setCv({\n//         ...cv,\n//         experience: [...cv.experience, { title: \"\", company: \"\", years: \"\" }],\n//       });\n//     };\n\n//     const handleSubmit = async (e) => {\n//       e.preventDefault();\n//       setLoading(true);\n//       try {\n//         if (isEditing) {\n//           await updateCV(id, cv);\n//         } else {\n//           await createCV(cv);\n//         }\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter oppretting/oppdatering\n//       } catch (error) {\n//         console.error(\"Feil ved lagring av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleDelete = async () => {\n//       setLoading(true);\n//       try {\n//         await deleteCV(id);\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter sletting\n//       } catch (error) {\n//         console.error(\"Feil ved sletting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     return (\n//       <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//         <h1 className=\"mb-20 flex items-center justify-center text-3xl font-bold text-[#023E8A]\">\n//           {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//         </h1>\n\n//         {loading && <p>Lasting...</p>}\n\n//         <form\n//           onSubmit={handleSubmit}\n//           className=\"max-w-lg p-10 mb-8 bg-white rounded-lg shadow-lg \"\n//         >\n//           <h2 className=\"text-center mb-4 text-xl text-[#023E8A]\">\n//             {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//           </h2>\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Navn\"\n//             name=\"personalInfo.name\"\n//             value={cv.personalInfo.name}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"email\"\n//             placeholder=\"E-post\"\n//             name=\"personalInfo.email\"\n//             value={cv.personalInfo.email}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Telefonnummer\"\n//             name=\"personalInfo.phone\"\n//             value={cv.personalInfo.phone}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Ferdigheter (separert med komma)\"\n//             value={cv.skills.join(\", \")}\n//             onChange={handleSkillChange}\n//           />\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Utdanning:</h3>\n//           {cv.education.map((edu, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Institusjon\"\n//                 name=\"institution\"\n//                 value={edu.institution}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Grad\"\n//                 name=\"degree\"\n//                 value={edu.degree}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"year\"\n//                 value={edu.year}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddEducation}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til utdanning\n//           </button>\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Erfaring:</h3>\n//           {cv.experience.map((exp, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Tittel\"\n//                 name=\"title\"\n//                 value={exp.title}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Selskap\"\n//                 name=\"company\"\n//                 value={exp.company}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"years\"\n//                 value={exp.years}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddExperience}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til erfaring\n//           </button>\n\n//           <div className=\"flex justify-center w-full\">\n//             <button\n//               type=\"submit\"\n//               className=\"mt-8 p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//             >\n//               {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//             </button>\n//           </div>\n//         </form>\n\n//         {isEditing && (\n//           <button\n//             onClick={handleDelete}\n//             className=\"mt-4 px-4 py-2 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-4 focus:ring-[#CAF0F8]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </div>\n//     );\n//   };\n\n//   export default UserCV;\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createCV, updateCV, fetchAllCVs, deleteCV } from \"../services/api\";\nimport InputField from \"../components/InputField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCvState = {\n  personalInfo: {\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  },\n  skills: \"\",\n  education: [{\n    institution: \"\",\n    degree: \"\",\n    year: \"\"\n  }],\n  experience: [{\n    title: \"\",\n    company: \"\",\n    years: \"\"\n  }]\n};\nconst UserCV = () => {\n  _s();\n  const [cv, setCv] = useState(initialCvState);\n  const [loading, setLoading] = useState(false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (id) fetchCV();\n  }, [id]);\n  const fetchCV = async () => {\n    setLoading(true);\n    try {\n      const response = await fetchAllCVs();\n      const userCV = response.find(cv => cv._id === id);\n      if (userCV) setCv(userCV);\n    } catch (error) {\n      console.error(\"Feil ved henting av CV:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const [mainKey, subKey] = name.split(\".\");\n    setCv(prev => ({\n      ...prev,\n      [mainKey]: subKey ? {\n        ...prev[mainKey],\n        [subKey]: value\n      } : value\n    }));\n  };\n  const handleNestedChange = (type, index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCv(prev => {\n      const updated = [...prev[type]];\n      updated[index][name] = value;\n      return {\n        ...prev,\n        [type]: updated\n      };\n    });\n  };\n  const handleAddItem = (type, item) => {\n    setCv(prev => ({\n      ...prev,\n      [type]: [...prev[type], item]\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      id ? await updateCV(id, cv) : await createCV(cv);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Feil ved lagring av CV:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async () => {\n    setLoading(true);\n    try {\n      await deleteCV(id);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Feil ved sletting av CV:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-20 text-3xl font-bold text-[#023E8A] text-center\",\n      children: id ? \"Rediger CV\" : \"Opprett CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lasting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"max-w-lg p-10 mb-8 bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Navn\",\n        name: \"personalInfo.name\",\n        value: cv.personalInfo.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"email\",\n        placeholder: \"E-post\",\n        name: \"personalInfo.email\",\n        value: cv.personalInfo.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Telefonnummer\",\n        name: \"personalInfo.phone\",\n        value: cv.personalInfo.phone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Ferdigheter (separert med komma)\",\n        name: \"skills\",\n        value: cv.skills,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Utdanning:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), cv.education.map((edu, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(edu).map(field => /*#__PURE__*/_jsxDEV(InputField, {\n          type: \"text\",\n          placeholder: field,\n          name: field,\n          value: edu[field],\n          onChange: e => handleNestedChange(\"education\", idx, e)\n        }, field, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }, this))\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddItem(\"education\", initialCvState.education[0]),\n        children: \"Legg til utdanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Erfaring:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), cv.experience.map((exp, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(exp).map(field => /*#__PURE__*/_jsxDEV(InputField, {\n          type: \"text\",\n          placeholder: field,\n          name: field,\n          value: exp[field],\n          onChange: e => handleNestedChange(\"experience\", idx, e)\n        }, field, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this))\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddItem(\"experience\", initialCvState.experience[0]),\n        children: \"Legg til erfaring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-8 p-3 bg-[#0077B6] text-white rounded-lg\",\n        children: id ? \"Oppdater CV\" : \"Opprett CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      className: \"px-4 py-2 mt-4 text-white bg-red-500 rounded-lg\",\n      children: \"Slett CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(UserCV, \"0PxRh0LofYScmKVMIBf5ePmCjCg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserCV;\nexport default UserCV;\nvar _c;\n$RefreshReg$(_c, \"UserCV\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","createCV","updateCV","fetchAllCVs","deleteCV","InputField","jsxDEV","_jsxDEV","initialCvState","personalInfo","name","email","phone","skills","education","institution","degree","year","experience","title","company","years","UserCV","_s","cv","setCv","loading","setLoading","id","navigate","fetchCV","response","userCV","find","_id","error","console","handleChange","e","value","target","mainKey","subKey","split","prev","handleNestedChange","type","index","updated","handleAddItem","item","handleSubmit","preventDefault","handleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","map","edu","idx","Object","keys","field","onClick","exp","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { createCV, updateCV, fetchAllCVs, deleteCV } from \"../services/api\"; // Importer nødvendige API-funksjoner\n// import InputField from \"../components/InputField\"; // Sørg for at du har en InputField-komponent\n\n// const UserCV = () => {\n//     const [cv, setCv] = useState({\n//       personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//       skills: [],\n//       education: [{ institution: \"\", degree: \"\", year: \"\" }],\n//       experience: [{ title: \"\", company: \"\", years: \"\" }],\n//     });\n//     const [loading, setLoading] = useState(false);\n//     const [isEditing, setIsEditing] = useState(false);\n//     const { id } = useParams();\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//       if (id) {\n//         setIsEditing(true);\n//         fetchCV();\n//       }\n//     }, [id]);\n\n//     const fetchCV = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await fetchAllCVs();\n//         const userCV = response.find((cv) => cv._id === id);\n//         if (userCV) {\n//           setCv(userCV);\n//         }\n//       } catch (error) {\n//         console.error(\"Feil ved henting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleChange = (e) => {\n//       const { name, value } = e.target;\n//       const [mainKey, subKey] = name.split('.'); // For å håndtere nested felter som \"personalInfo.name\"\n\n//       setCv((prevCv) => ({\n//         ...prevCv,\n//         [mainKey]: {\n//           ...prevCv[mainKey],\n//           [subKey]: value,\n//         },\n//       }));\n//     };\n\n//     const handleSkillChange = (e) => {\n//       setCv({\n//         ...cv,\n//         skills: e.target.value.split(\", \"),\n//       });\n//     };\n\n//     const handleEducationChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedEducation = [...cv.education];\n//       updatedEducation[index][name] = value;\n//       setCv({ ...cv, education: updatedEducation });\n//     };\n\n//     const handleExperienceChange = (e, index) => {\n//       const { name, value } = e.target;\n//       const updatedExperience = [...cv.experience];\n//       updatedExperience[index][name] = value;\n//       setCv({ ...cv, experience: updatedExperience });\n//     };\n\n//     const handleAddEducation = () => {\n//       setCv({\n//         ...cv,\n//         education: [...cv.education, { institution: \"\", degree: \"\", year: \"\" }],\n//       });\n//     };\n\n//     const handleAddExperience = () => {\n//       setCv({\n//         ...cv,\n//         experience: [...cv.experience, { title: \"\", company: \"\", years: \"\" }],\n//       });\n//     };\n\n//     const handleSubmit = async (e) => {\n//       e.preventDefault();\n//       setLoading(true);\n//       try {\n//         if (isEditing) {\n//           await updateCV(id, cv);\n//         } else {\n//           await createCV(cv);\n//         }\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter oppretting/oppdatering\n//       } catch (error) {\n//         console.error(\"Feil ved lagring av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     const handleDelete = async () => {\n//       setLoading(true);\n//       try {\n//         await deleteCV(id);\n//         navigate(\"/dashboard\"); // Naviger tilbake til dashboard etter sletting\n//       } catch (error) {\n//         console.error(\"Feil ved sletting av CV:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     return (\n//       <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//         <h1 className=\"mb-20 flex items-center justify-center text-3xl font-bold text-[#023E8A]\">\n//           {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//         </h1>\n\n//         {loading && <p>Lasting...</p>}\n\n//         <form\n//           onSubmit={handleSubmit}\n//           className=\"max-w-lg p-10 mb-8 bg-white rounded-lg shadow-lg \"\n//         >\n//           <h2 className=\"text-center mb-4 text-xl text-[#023E8A]\">\n//             {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//           </h2>\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Navn\"\n//             name=\"personalInfo.name\"\n//             value={cv.personalInfo.name}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"email\"\n//             placeholder=\"E-post\"\n//             name=\"personalInfo.email\"\n//             value={cv.personalInfo.email}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Telefonnummer\"\n//             name=\"personalInfo.phone\"\n//             value={cv.personalInfo.phone}\n//             onChange={handleChange}\n//             required\n//           />\n\n//           <InputField\n//             type=\"text\"\n//             placeholder=\"Ferdigheter (separert med komma)\"\n//             value={cv.skills.join(\", \")}\n//             onChange={handleSkillChange}\n//           />\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Utdanning:</h3>\n//           {cv.education.map((edu, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Institusjon\"\n//                 name=\"institution\"\n//                 value={edu.institution}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Grad\"\n//                 name=\"degree\"\n//                 value={edu.degree}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"year\"\n//                 value={edu.year}\n//                 onChange={(e) => handleEducationChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddEducation}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til utdanning\n//           </button>\n\n//           <h3 className=\"mb-2 text-[#023E8A]\">Erfaring:</h3>\n//           {cv.experience.map((exp, index) => (\n//             <div key={index} className=\"mb-4\">\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Tittel\"\n//                 name=\"title\"\n//                 value={exp.title}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"Selskap\"\n//                 name=\"company\"\n//                 value={exp.company}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//               <InputField\n//                 type=\"text\"\n//                 placeholder=\"År\"\n//                 name=\"years\"\n//                 value={exp.years}\n//                 onChange={(e) => handleExperienceChange(e, index)}\n//               />\n//             </div>\n//           ))}\n//           <button\n//             type=\"button\"\n//             onClick={handleAddExperience}\n//             className=\"text-[#0077B6] mb-4\"\n//           >\n//             Legg til erfaring\n//           </button>\n\n//           <div className=\"flex justify-center w-full\">\n//             <button\n//               type=\"submit\"\n//               className=\"mt-8 p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//             >\n//               {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//             </button>\n//           </div>\n//         </form>\n\n//         {isEditing && (\n//           <button\n//             onClick={handleDelete}\n//             className=\"mt-4 px-4 py-2 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-4 focus:ring-[#CAF0F8]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </div>\n//     );\n//   };\n\n//   export default UserCV;\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createCV, updateCV, fetchAllCVs, deleteCV } from \"../services/api\";\nimport InputField from \"../components/InputField\";\n\nconst initialCvState = {\n  personalInfo: { name: \"\", email: \"\", phone: \"\" },\n  skills: \"\",\n  education: [{ institution: \"\", degree: \"\", year: \"\" }],\n  experience: [{ title: \"\", company: \"\", years: \"\" }],\n};\n\nconst UserCV = () => {\n  const [cv, setCv] = useState(initialCvState);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (id) fetchCV();\n  }, [id]);\n\n  const fetchCV = async () => {\n    setLoading(true);\n    try {\n      const response = await fetchAllCVs();\n      const userCV = response.find((cv) => cv._id === id);\n      if (userCV) setCv(userCV);\n    } catch (error) {\n      console.error(\"Feil ved henting av CV:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const [mainKey, subKey] = name.split(\".\");\n    setCv((prev) => ({\n      ...prev,\n      [mainKey]: subKey ? { ...prev[mainKey], [subKey]: value } : value,\n    }));\n  };\n\n  const handleNestedChange = (type, index, e) => {\n    const { name, value } = e.target;\n    setCv((prev) => {\n      const updated = [...prev[type]];\n      updated[index][name] = value;\n      return { ...prev, [type]: updated };\n    });\n  };\n\n  const handleAddItem = (type, item) => {\n    setCv((prev) => ({ ...prev, [type]: [...prev[type], item] }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      id ? await updateCV(id, cv) : await createCV(cv);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Feil ved lagring av CV:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    setLoading(true);\n    try {\n      await deleteCV(id);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Feil ved sletting av CV:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n      <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n        {id ? \"Rediger CV\" : \"Opprett CV\"}\n      </h1>\n\n      {loading && <p>Lasting...</p>}\n\n      <form\n        onSubmit={handleSubmit}\n        className=\"max-w-lg p-10 mb-8 bg-white rounded-lg shadow-lg\"\n      >\n        <InputField\n          type=\"text\"\n          placeholder=\"Navn\"\n          name=\"personalInfo.name\"\n          value={cv.personalInfo.name}\n          onChange={handleChange}\n          required\n        />\n\n        <InputField\n          type=\"email\"\n          placeholder=\"E-post\"\n          name=\"personalInfo.email\"\n          value={cv.personalInfo.email}\n          onChange={handleChange}\n          required\n        />\n\n        <InputField\n          type=\"text\"\n          placeholder=\"Telefonnummer\"\n          name=\"personalInfo.phone\"\n          value={cv.personalInfo.phone}\n          onChange={handleChange}\n          required\n        />\n\n        <InputField\n          type=\"text\"\n          placeholder=\"Ferdigheter (separert med komma)\"\n          name=\"skills\"\n          value={cv.skills}\n          onChange={handleChange}\n        />\n\n        <h3>Utdanning:</h3>\n        {cv.education.map((edu, idx) => (\n          <div key={idx}>\n            {Object.keys(edu).map((field) => (\n              <InputField\n                key={field}\n                type=\"text\"\n                placeholder={field}\n                name={field}\n                value={edu[field]}\n                onChange={(e) => handleNestedChange(\"education\", idx, e)}\n              />\n            ))}\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() =>\n            handleAddItem(\"education\", initialCvState.education[0])\n          }\n        >\n          Legg til utdanning\n        </button>\n\n        <h3>Erfaring:</h3>\n        {cv.experience.map((exp, idx) => (\n          <div key={idx}>\n            {Object.keys(exp).map((field) => (\n              <InputField\n                key={field}\n                type=\"text\"\n                placeholder={field}\n                name={field}\n                value={exp[field]}\n                onChange={(e) => handleNestedChange(\"experience\", idx, e)}\n              />\n            ))}\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() =>\n            handleAddItem(\"experience\", initialCvState.experience[0])\n          }\n        >\n          Legg til erfaring\n        </button>\n\n        <button\n          type=\"submit\"\n          className=\"mt-8 p-3 bg-[#0077B6] text-white rounded-lg\"\n        >\n          {id ? \"Oppdater CV\" : \"Opprett CV\"}\n        </button>\n      </form>\n\n      {id && (\n        <button\n          onClick={handleDelete}\n          className=\"px-4 py-2 mt-4 text-white bg-red-500 rounded-lg\"\n        >\n          Slett CV\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default UserCV;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}