{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\"; // Importer API-funksjonene\n// import Navbar from \"../components/Navbar\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const { id } = useParams(); // For editing a specific CV\n//   const [loading, setLoading] = useState(false);\n\n//   // Fetch CV if we are editing\n//   useEffect(() => {\n//     if (id) {\n//       const fetchCV = async () => {\n//         setLoading(true);\n//         try {\n//           const response = await fetchAllCVs(id);\n//           setCv(response);\n//           setIsEditing(true);\n//         } catch (error) {\n//           console.error(\"Error fetching CV:\", error);\n//         } finally {\n//           setLoading(false);\n//         }\n//       };\n//       fetchCV();\n//     }\n//   }, [id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (isEditing) {\n//         await updateCV(id, cv);\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(cv);\n//         alert(\"CV opprettet!\");\n//       }\n//     } catch (error) {\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       await deleteCV(id);\n//       alert(\"CV slettet!\");\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={handleDelete}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CVForm = () => {\n  _s();\n  const [cv, setCv] = useState({\n    personalInfo: {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    },\n    skills: \"\",\n    education: \"\",\n    experience: \"\",\n    references: \"\"\n  });\n  const [cvList, setCvList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  localStorage.getItem(\"userId\");\n\n  // Fetch CV if we are editing\n  useEffect(() => {\n    if (id) {\n      const fetchCV = async () => {\n        setLoading(true);\n        try {\n          const response = await fetchAllCVs(id);\n          // Sjekk om CV tilhører den nåværende brukeren før visning\n          if (response.userId !== currentUserId) {\n            alert(\"Du har ikke tilgang til å redigere denne CV-en.\");\n            navigate(\"/cvs\"); // Naviger bort hvis ikke eier\n            return;\n          }\n          setCv(response);\n          setIsEditing(true);\n        } catch (error) {\n          console.error(\"Error fetching CV:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchCV();\n    } else {\n      const fetchAll = async () => {\n        try {\n          const response = await fetchAllCVs();\n          // Filtrer bare CV-er som tilhører den nåværende brukeren\n          setCvList(response.filter(cvItem => cvItem.userId === currentUserId));\n        } catch (error) {\n          console.error(\"Error fetching CVs:\", error);\n        }\n      };\n      fetchAll();\n    }\n  }, [userId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newCv = {\n        ...cv,\n        userId: currentUserId\n      }; // Legg til bruker-ID før lagring\n      if (isEditing) {\n        await updateCV(id, newCv);\n        alert(\"CV oppdatert!\");\n      } else {\n        await createCV(newCv);\n        alert(\"CV opprettet!\");\n        setCvList([...cvList, newCv]);\n      }\n      setCv({\n        personalInfo: {\n          name: \"\",\n          email: \"\",\n          phone: \"\"\n        },\n        skills: \"\",\n        education: \"\",\n        experience: \"\",\n        references: \"\"\n      });\n      setIsEditing(false);\n    } catch (error) {\n      alert(\"Feil ved oppretting eller oppdatering av CV.\");\n    }\n  };\n  const handleDelete = async () => {\n    try {\n      await deleteCV(id);\n      alert(\"CV slettet!\");\n      setCvList(cvList.filter(item => item.id !== id));\n      navigate(\"/cvs\");\n    } catch (error) {\n      alert(\"Feil ved sletting av CV.\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCv({\n      ...cv,\n      personalInfo: {\n        ...cv.personalInfo,\n        [name]: value\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-20 text-3xl font-bold text-[#023E8A] text-center\",\n      children: isEditing ? \"Rediger CV\" : \"Opprett CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4 text-xl text-[#023E8A] text-center\",\n        children: isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Navn:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: cv.personalInfo.name,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"E-post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: cv.personalInfo.email,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Telefonnummer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        value: cv.personalInfo.phone,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\",\n        children: isEditing ? \"Oppdater CV\" : \"Opprett CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleDelete,\n        className: \"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\",\n        children: \"Slett CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-16 mb-4 text-xl text-[#023E8A]\",\n      children: \"Eksisterende CV-er:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: cvList.map(cvItem => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"p-4 bg-white border rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Navn:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), \" \", cvItem.personalInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"E-post:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), \" \", cvItem.personalInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Telefonnummer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), \" \", cvItem.personalInfo.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, cvItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(CVForm, \"ZttsHDAXt4LTpyD0eW/E1SrKHTM=\", false, function () {\n  return [useNavigate];\n});\n_c = CVForm;\nexport default CVForm;\nvar _c;\n$RefreshReg$(_c, \"CVForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","createCV","updateCV","deleteCV","fetchAllCVs","jsxDEV","_jsxDEV","CVForm","_s","cv","setCv","personalInfo","name","email","phone","skills","education","experience","references","cvList","setCvList","isEditing","setIsEditing","navigate","loading","setLoading","localStorage","getItem","id","fetchCV","response","userId","currentUserId","alert","error","console","fetchAll","filter","cvItem","handleSubmit","e","preventDefault","newCv","handleDelete","item","handleChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","map","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\"; // Importer API-funksjonene\n// import Navbar from \"../components/Navbar\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const { id } = useParams(); // For editing a specific CV\n//   const [loading, setLoading] = useState(false);\n\n//   // Fetch CV if we are editing\n//   useEffect(() => {\n//     if (id) {\n//       const fetchCV = async () => {\n//         setLoading(true);\n//         try {\n//           const response = await fetchAllCVs(id);\n//           setCv(response);\n//           setIsEditing(true);\n//         } catch (error) {\n//           console.error(\"Error fetching CV:\", error);\n//         } finally {\n//           setLoading(false);\n//         }\n//       };\n//       fetchCV();\n//     }\n//   }, [id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (isEditing) {\n//         await updateCV(id, cv);\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(cv);\n//         alert(\"CV opprettet!\");\n//       }\n//     } catch (error) {\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       await deleteCV(id);\n//       alert(\"CV slettet!\");\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={handleDelete}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\";\n\nconst CVForm = () => {\n  const [cv, setCv] = useState({\n    personalInfo: { name: \"\", email: \"\", phone: \"\" },\n    skills: \"\",\n    education: \"\",\n    experience: \"\",\n    references: \"\",\n  });\n  const [cvList, setCvList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  localStorage.getItem(\"userId\");\n\n  // Fetch CV if we are editing\n  useEffect(() => {\n    if (id) {\n      const fetchCV = async () => {\n        setLoading(true);\n        try {\n          const response = await fetchAllCVs(id);\n          // Sjekk om CV tilhører den nåværende brukeren før visning\n          if (response.userId !== currentUserId) {\n            alert(\"Du har ikke tilgang til å redigere denne CV-en.\");\n            navigate(\"/cvs\"); // Naviger bort hvis ikke eier\n            return;\n          }\n          setCv(response);\n          setIsEditing(true);\n        } catch (error) {\n          console.error(\"Error fetching CV:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchCV();\n    } else {\n      const fetchAll = async () => {\n        try {\n          const response = await fetchAllCVs();\n          // Filtrer bare CV-er som tilhører den nåværende brukeren\n          setCvList(\n            response.filter((cvItem) => cvItem.userId === currentUserId)\n          );\n        } catch (error) {\n          console.error(\"Error fetching CVs:\", error);\n        }\n      };\n      fetchAll();\n    }\n  }, [userId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newCv = { ...cv, userId: currentUserId }; // Legg til bruker-ID før lagring\n      if (isEditing) {\n        await updateCV(id, newCv);\n        alert(\"CV oppdatert!\");\n      } else {\n        await createCV(newCv);\n        alert(\"CV opprettet!\");\n        setCvList([...cvList, newCv]);\n      }\n      setCv({\n        personalInfo: { name: \"\", email: \"\", phone: \"\" },\n        skills: \"\",\n        education: \"\",\n        experience: \"\",\n        references: \"\",\n      });\n      setIsEditing(false);\n    } catch (error) {\n      alert(\"Feil ved oppretting eller oppdatering av CV.\");\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteCV(id);\n      alert(\"CV slettet!\");\n      setCvList(cvList.filter((item) => item.id !== id));\n      navigate(\"/cvs\");\n    } catch (error) {\n      alert(\"Feil ved sletting av CV.\");\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n  };\n\n  return (\n    <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n      <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n        {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n      </h1>\n\n      <form\n        onSubmit={handleSubmit}\n        className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n      >\n        <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n          {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n        </h2>\n\n        <label className=\"block mb-2\">Navn:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={cv.personalInfo.name}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <label className=\"block mb-2\">E-post:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={cv.personalInfo.email}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <label className=\"block mb-2\">Telefonnummer:</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={cv.personalInfo.phone}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n        >\n          {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n        </button>\n\n        {isEditing && (\n          <button\n            type=\"button\"\n            onClick={handleDelete}\n            className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n          >\n            Slett CV\n          </button>\n        )}\n      </form>\n\n      <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n      <ul className=\"space-y-4\">\n        {cvList.map((cvItem) => (\n          <li\n            key={cvItem.id}\n            className=\"p-4 bg-white border rounded-lg shadow-lg\"\n          >\n            <p>\n              <strong>Navn:</strong> {cvItem.personalInfo.name}\n            </p>\n            <p>\n              <strong>E-post:</strong> {cvItem.personalInfo.email}\n            </p>\n            <p>\n              <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CVForm;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGb,QAAQ,CAAC;IAC3Bc,YAAY,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC;IAChDC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}