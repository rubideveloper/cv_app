{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport CVForm from \"../components/CVForm\";\nimport { createCV } from \"../services/api\";\nimport Navbar from \"../components/Navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserCV() {\n  _s();\n  const navigate = useNavigate();\n  const handleCVSubmit = data => {\n    // Hent brukerens ID fra localStorage\n    const currentUserId = localStorage.getItem(\"userId\");\n\n    // Debugging for å sjekke om userId er korrekt\n    console.log(\"Current User ID:\", currentUserId); // Logg userId for å se om den er korrekt\n\n    if (!currentUserId) {\n      alert(\"Brukeren er ikke logget inn.\");\n      navigate(\"/login\");\n      return;\n    }\n    const newCv = {\n      ...data,\n      userId: currentUserId // Legg til brukerens ID\n    };\n    console.log(\"Sending data to createCV:\", newCv); // Logg dataene for feilsøking\n\n    createCV(newCv).then(response => {\n      console.log(\"CV opprettet:\", response);\n      if (response.status === 201) {\n        navigate(\"/dashboard\"); // Naviger til dashboard om CV-en er opprettet\n      } else {\n        alert(\"Noe gikk galt, prøv igjen.\");\n      }\n    }).catch(error => {\n      console.error(\"Feil ved oppretting av CV:\", error); // Logg eventuelle feil\n      alert(\"Kunne ikke opprette CV\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4 text-3xl font-semibold\",\n      children: \"Min CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CVForm, {\n      onSubmit: handleCVSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(UserCV, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = UserCV;\nexport default UserCV;\nvar _c;\n$RefreshReg$(_c, \"UserCV\");","map":{"version":3,"names":["React","CVForm","createCV","Navbar","useNavigate","jsxDEV","_jsxDEV","UserCV","_s","navigate","handleCVSubmit","data","currentUserId","localStorage","getItem","console","log","alert","newCv","userId","then","response","status","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js"],"sourcesContent":["import React from \"react\";\nimport CVForm from \"../components/CVForm\";\nimport { createCV } from \"../services/api\";\nimport Navbar from \"../components/Navbar\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UserCV() {\n  const navigate = useNavigate();\n\n  const handleCVSubmit = (data) => {\n    // Hent brukerens ID fra localStorage\n    const currentUserId = localStorage.getItem(\"userId\");\n\n    // Debugging for å sjekke om userId er korrekt\n    console.log(\"Current User ID:\", currentUserId); // Logg userId for å se om den er korrekt\n\n    if (!currentUserId) {\n      alert(\"Brukeren er ikke logget inn.\");\n      navigate(\"/login\");\n      return;\n    }\n\n    const newCv = {\n      ...data,\n      userId: currentUserId, // Legg til brukerens ID\n    };\n\n    console.log(\"Sending data to createCV:\", newCv); // Logg dataene for feilsøking\n\n    createCV(newCv)\n      .then((response) => {\n        console.log(\"CV opprettet:\", response);\n        if (response.status === 201) {\n          navigate(\"/dashboard\"); // Naviger til dashboard om CV-en er opprettet\n        } else {\n          alert(\"Noe gikk galt, prøv igjen.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Feil ved oppretting av CV:\", error); // Logg eventuelle feil\n        alert(\"Kunne ikke opprette CV\");\n      });\n  };\n\n  return (\n    <div className=\"p-6\">\n      <Navbar />\n      <h1 className=\"mb-4 text-3xl font-semibold\">Min CV</h1>\n      <CVForm onSubmit={handleCVSubmit} />\n    </div>\n  );\n}\n\nexport default UserCV;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,cAAc,GAAIC,IAAI,IAAK;IAC/B;IACA,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;;IAEpD;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,aAAa,CAAC,CAAC,CAAC;;IAEhD,IAAI,CAACA,aAAa,EAAE;MAClBK,KAAK,CAAC,8BAA8B,CAAC;MACrCR,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,MAAMS,KAAK,GAAG;MACZ,GAAGP,IAAI;MACPQ,MAAM,EAAEP,aAAa,CAAE;IACzB,CAAC;IAEDG,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEE,KAAK,CAAC,CAAC,CAAC;;IAEjDhB,QAAQ,CAACgB,KAAK,CAAC,CACZE,IAAI,CAAEC,QAAQ,IAAK;MAClBN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,QAAQ,CAAC;MACtC,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3Bb,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLQ,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC,CAAC;MACpDP,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,CAAC;EACN,CAAC;EAED,oBACEX,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA,CAACH,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA;MAAImB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDxB,OAAA,CAACL,MAAM;MAAC8B,QAAQ,EAAErB;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACtB,EAAA,CA7CQD,MAAM;EAAA,QACIH,WAAW;AAAA;AAAA4B,EAAA,GADrBzB,MAAM;AA+Cf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}