{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API_BASE;\n\n//Hent alle brukere\nexport const fetchUsers = async () => {\n  try {\n    const response = await fetch(`${API_BASE}/users`);\n    if (!response.ok) {\n      throw new Error(\"Feil ved henting av brukere\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n//Regis\nexport const createUser = async newUser => {\n  try {\n    const response = await fetch(`${API_BASE}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    });\n    if (!response.ok) {\n      throw new Error(\"Feil ved oppretting av bruker\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await fetch(`${API_BASE}/users/${id}`, {\n      method: \"DELETE\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Feil ved sletting av bruker\");\n    }\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_BASE","fetchUsers","response","fetch","ok","Error","data","json","error","console","createUser","newUser","method","headers","body","JSON","stringify","deleteUser","id"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/services/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_BASE;\n\n\n//Hent alle brukere\nexport const fetchUsers = async () => {\n  try {\n    const response = await fetch(`${API_BASE}/users`);\n    if (!response.ok) {\n      throw new Error(\"Feil ved henting av brukere\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n//Regis\nexport const createUser = async (newUser) => {\n  try {\n    const response = await fetch(`${API_BASE}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newUser),\n    });\n    if (!response.ok) {\n      throw new Error(\"Feil ved oppretting av bruker\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const deleteUser = async (id) => {\n  try {\n    const response = await fetch(`${API_BASE}/users/${id}`, {\n      method: \"DELETE\",\n    });\n    if (!response.ok) {\n      throw new Error(\"Feil ved sletting av bruker\");\n    }\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;;AAG/C;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,QAAQ,CAAC;IACjD,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,QAAQ,EAAE;MAChDe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,UAAUqB,EAAE,EAAE,EAAE;MACtDN,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACF,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}