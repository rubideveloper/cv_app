{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\";\n// import Navbar from \"../components/Navbar\";\n\n// const AdminCVManagement = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [id, setId] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchAllCVsData = async () => {\n//       try {\n//         const cvs = await fetchAllCVs();\n//         setCvList(cvs);\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       }\n//     };\n\n//     fetchAllCVsData();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (isEditing) {\n//         await updateCV(id, cv);\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         const newCv = await createCV(cv);\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]);\n//       }\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async (cvId) => {\n//     try {\n//       await deleteCV(cvId);\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item._id !== cvId));\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleEdit = (cvItem) => {\n//     setCv(cvItem);\n//     setIsEditing(true);\n//     setId(cvItem._id);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Alle CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem) => (\n//           <li\n//             key={cvItem._id}\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//             <button\n//               onClick={() => handleEdit(cvItem)}\n//               className=\"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\"\n//             >\n//               Rediger\n//             </button>\n//             <button\n//               onClick={() => handleDelete(cvItem._id)}\n//               className=\"w-full p-2 mt-2 text-white bg-red-500 rounded-lg hover:bg-red-600\"\n//             >\n//               Slett\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default AdminCVManagement;","map":{"version":3,"names":[],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/ManageCVs.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\";\n// import Navbar from \"../components/Navbar\";\n\n// const AdminCVManagement = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [id, setId] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchAllCVsData = async () => {\n//       try {\n//         const cvs = await fetchAllCVs();\n//         setCvList(cvs);\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       }\n//     };\n\n//     fetchAllCVsData();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (isEditing) {\n//         await updateCV(id, cv);\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         const newCv = await createCV(cv);\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]);\n//       }\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async (cvId) => {\n//     try {\n//       await deleteCV(cvId);\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item._id !== cvId));\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleEdit = (cvItem) => {\n//     setCv(cvItem);\n//     setIsEditing(true);\n//     setId(cvItem._id);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Alle CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem) => (\n//           <li\n//             key={cvItem._id}\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//             <button\n//               onClick={() => handleEdit(cvItem)}\n//               className=\"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\"\n//             >\n//               Rediger\n//             </button>\n//             <button\n//               onClick={() => handleDelete(cvItem._id)}\n//               className=\"w-full p-2 mt-2 text-white bg-red-500 rounded-lg hover:bg-red-600\"\n//             >\n//               Slett\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default AdminCVManagement;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}