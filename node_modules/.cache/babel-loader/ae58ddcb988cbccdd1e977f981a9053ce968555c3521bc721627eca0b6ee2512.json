{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js\",\n  _s = $RefreshSig$();\n// // export default CVForm;\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   createCV,\n//   updateCV,\n//   deleteCV,\n//   fetchCVsByUserId,\n// } from \"../services/api\";\n// import Navbar from \"../components/Navbar\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     const fetchUserCVs = async () => {\n//       setLoading(true);\n//       try {\n//         const cvs = await fetchCVsByUserId(currentUserId); // Hent CV-er for bruker\n//         setCvList(cvs); // Sett CV-ene i tilstand\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUserCVs(); // Hent CV-er for innlogget bruker\n//   }, [navigate]); // Hent CV-er når komponenten lastes\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     try {\n//       const newCv = { ...cv, userId: currentUserId }; // Legg til bruker-ID før lagring\n\n//       if (isEditing) {\n//         await updateCV(id, newCv);\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(newCv);\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]); // Legg til det nye CV-et i listen\n//       }\n\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error(\"Feil ved oppretting eller oppdatering av CV:\", error);\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       await deleteCV(id);\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item.id !== id)); // Fjern CV fra listen etter sletting\n//       navigate(\"/cvs\"); // Naviger til listen av CV-er\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={handleDelete}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem, index) => (\n//           <li\n//             key={cvItem.id || index} // Bruk index som fallback hvis id mangler\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchCVsByUserId, createCV, updateCV } from \"../\"; // Importer nødvendige funksjoner\nimport CVForm from \"./CVForm\"; // Importer CVForm-komponenten\nimport CVList from \"./CVList\"; // Importer CVList-komponenten\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CVPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [cvs, setCvs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n  useEffect(() => {\n    if (!currentUserId) {\n      alert(\"Brukeren er ikke logget inn.\");\n      navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n      return; // Avbryt videre behandling\n    }\n    const fetchUserCVs = async () => {\n      try {\n        const fetchedCVs = await fetchCVsByUserId(currentUserId); // Hent alle CV-er\n        const filteredCVs = fetchedCVs.filter(cv => cv.userId === currentUserId); // Filtrer CV-er for den spesifikke brukeren\n        setCvs(filteredCVs); // Sett CV-ene til den innloggede brukeren\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Feil under henting av CV-er:\", error);\n        setIsLoading(false);\n      }\n    };\n    fetchUserCVs();\n  }, [currentUserId, navigate]);\n  const handleAddCV = async cvData => {\n    const newCv = {\n      ...cvData,\n      userId: currentUserId // Sørg for at userId settes korrekt her\n    };\n    try {\n      const createdCV = await createCV(newCv); // Opprett ny CV\n      setCvs(prevCVs => [...prevCVs, createdCV]); // Legg til den nye CV-en i listen\n    } catch (error) {\n      console.error(\"Feil ved opprettelse av CV:\", error);\n    }\n  };\n  const handleUpdateCV = async updatedCvData => {\n    const updatedCv = {\n      ...updatedCvData,\n      userId: currentUserId // Sørg for at userId settes korrekt her\n    };\n    try {\n      const updatedCV = await updateCV(updatedCv.id, updatedCv); // Oppdater CV\n      setCvs(prevCVs => prevCVs.map(cv => cv.id === updatedCV.id ? updatedCV : cv)); // Oppdater CV-en i listen\n    } catch (error) {\n      console.error(\"Feil ved oppdatering av CV:\", error);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Laster...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 12\n    }, this); // Vis en lasteindikator mens data hentes\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-20 text-3xl font-bold text-[#023E8A] text-center\",\n      children: isEditing ? \"Rediger CV\" : \"Opprett CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4 text-xl text-[#023E8A] text-center\",\n        children: isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Navn:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: cv.personalInfo.name,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"E-post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: cv.personalInfo.email,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Telefonnummer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        value: cv.personalInfo.phone,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\",\n        children: isEditing ? \"Oppdater CV\" : \"Opprett CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleDelete(id),\n        className: \"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\",\n        children: \"Slett CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-16 mb-4 text-xl text-[#023E8A]\",\n      children: \"Eksisterende CV-er:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: cvList.map((cvItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        // Bruk ID for hver CV\n        className: \"p-4 bg-white border rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Navn:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), \" \", cvItem.personalInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"E-post:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), \" \", cvItem.personalInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Telefonnummer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), \" \", cvItem.personalInfo.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(cvItem),\n          className: \"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\",\n          children: \"Rediger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, cvItem._id || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(CVPage, \"oqZ7TdZxq7FH2B45JeIhg8OcGog=\", false, function () {\n  return [useNavigate];\n});\n_c = CVPage;\nexport default CVForm;\nvar _c;\n$RefreshReg$(_c, \"CVPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","fetchCVsByUserId","createCV","updateCV","CVForm","CVList","jsxDEV","_jsxDEV","CVPage","_s","navigate","cvs","setCvs","isLoading","setIsLoading","currentUserId","localStorage","getItem","alert","fetchUserCVs","fetchedCVs","filteredCVs","filter","cv","userId","error","console","handleAddCV","cvData","newCv","createdCV","prevCVs","handleUpdateCV","updatedCvData","updatedCv","updatedCV","id","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Navbar","isEditing","onSubmit","handleSubmit","type","name","value","personalInfo","onChange","handleChange","required","email","phone","onClick","handleDelete","cvList","cvItem","index","handleEdit","_id","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js"],"sourcesContent":["// // export default CVForm;\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   createCV,\n//   updateCV,\n//   deleteCV,\n//   fetchCVsByUserId,\n// } from \"../services/api\";\n// import Navbar from \"../components/Navbar\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     const fetchUserCVs = async () => {\n//       setLoading(true);\n//       try {\n//         const cvs = await fetchCVsByUserId(currentUserId); // Hent CV-er for bruker\n//         setCvList(cvs); // Sett CV-ene i tilstand\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUserCVs(); // Hent CV-er for innlogget bruker\n//   }, [navigate]); // Hent CV-er når komponenten lastes\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     try {\n//       const newCv = { ...cv, userId: currentUserId }; // Legg til bruker-ID før lagring\n\n//       if (isEditing) {\n//         await updateCV(id, newCv);\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(newCv);\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]); // Legg til det nye CV-et i listen\n//       }\n\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error(\"Feil ved oppretting eller oppdatering av CV:\", error);\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       await deleteCV(id);\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item.id !== id)); // Fjern CV fra listen etter sletting\n//       navigate(\"/cvs\"); // Naviger til listen av CV-er\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={handleDelete}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem, index) => (\n//           <li\n//             key={cvItem.id || index} // Bruk index som fallback hvis id mangler\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchCVsByUserId, createCV, updateCV } from \"../\"; // Importer nødvendige funksjoner\nimport CVForm from \"./CVForm\"; // Importer CVForm-komponenten\nimport CVList from \"./CVList\"; // Importer CVList-komponenten\n\nconst CVPage = () => {\n  const navigate = useNavigate();\n  const [cvs, setCvs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n  useEffect(() => {\n    if (!currentUserId) {\n      alert(\"Brukeren er ikke logget inn.\");\n      navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n      return; // Avbryt videre behandling\n    }\n\n    const fetchUserCVs = async () => {\n      try {\n        const fetchedCVs = await fetchCVsByUserId(currentUserId); // Hent alle CV-er\n        const filteredCVs = fetchedCVs.filter(\n          (cv) => cv.userId === currentUserId\n        ); // Filtrer CV-er for den spesifikke brukeren\n        setCvs(filteredCVs); // Sett CV-ene til den innloggede brukeren\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Feil under henting av CV-er:\", error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserCVs();\n  }, [currentUserId, navigate]);\n\n  const handleAddCV = async (cvData) => {\n    const newCv = {\n      ...cvData,\n      userId: currentUserId, // Sørg for at userId settes korrekt her\n    };\n\n    try {\n      const createdCV = await createCV(newCv); // Opprett ny CV\n      setCvs((prevCVs) => [...prevCVs, createdCV]); // Legg til den nye CV-en i listen\n    } catch (error) {\n      console.error(\"Feil ved opprettelse av CV:\", error);\n    }\n  };\n\n  const handleUpdateCV = async (updatedCvData) => {\n    const updatedCv = {\n      ...updatedCvData,\n      userId: currentUserId, // Sørg for at userId settes korrekt her\n    };\n\n    try {\n      const updatedCV = await updateCV(updatedCv.id, updatedCv); // Oppdater CV\n      setCvs((prevCVs) =>\n        prevCVs.map((cv) => (cv.id === updatedCV.id ? updatedCV : cv))\n      ); // Oppdater CV-en i listen\n    } catch (error) {\n      console.error(\"Feil ved oppdatering av CV:\", error);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Laster...</div>; // Vis en lasteindikator mens data hentes\n  }\n\n  return (\n    <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n      <Navbar />\n      <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n        {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n      </h1>\n\n      <form\n        onSubmit={handleSubmit}\n        className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n      >\n        <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n          {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n        </h2>\n\n        <label className=\"block mb-2\">Navn:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={cv.personalInfo.name}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <label className=\"block mb-2\">E-post:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={cv.personalInfo.email}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <label className=\"block mb-2\">Telefonnummer:</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={cv.personalInfo.phone}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n        >\n          {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n        </button>\n\n        {isEditing && (\n          <button\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n            className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n          >\n            Slett CV\n          </button>\n        )}\n      </form>\n\n      <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n      <ul className=\"space-y-4\">\n        {cvList.map((cvItem, index) => (\n          <li\n            key={cvItem._id || index} // Bruk ID for hver CV\n            className=\"p-4 bg-white border rounded-lg shadow-lg\"\n          >\n            <p>\n              <strong>Navn:</strong> {cvItem.personalInfo.name}\n            </p>\n            <p>\n              <strong>E-post:</strong> {cvItem.personalInfo.email}\n            </p>\n            <p>\n              <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n            </p>\n            <button\n              onClick={() => handleEdit(cvItem)}\n              className=\"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\"\n            >\n              Rediger\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CVForm;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,KAAK,CAAC,CAAC;AAC5D,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAC/B,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,GAAG,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}