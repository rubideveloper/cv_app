{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const API_BASE = \"https://crudcrud.com/api/07b637f165124acb8ccc0cff42612b46\";\n\n// function ManageUsers() {\n//   const [users, setUsers] = useState([]);\n//   const [newUser, setNewUser] = useState({\n//     name: \"\",\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     role: \"user\",\n//   });\n\n//   // Hent alle brukere\n//   useEffect(() => {\n//     axios\n//       .get(`${API_BASE}/users`)\n//       .then((response) => setUsers(response.data))\n//       .catch((error) => console.error(\"Feil ved henting av brukere:\", error));\n//   }, []);\n\n//   // Registrer ny bruker\n//   const addUser = (e) => {\n//     e.preventDefault();\n//     axios\n//       .post(`${API_BASE}/users`, newUser)\n//       .then((response) => {\n//         setUsers([...users, response.data]);\n//         setNewUser({ name: \"\", email: \"\", password: \"\", role: \"user\" });\n//       })\n//       .catch((error) => console.error(\"Feil ved oppretting av bruker:\", error));\n//   };\n\n//   // Slett bruker\n//   const deleteUser = (id) => {\n//     axios\n//       .delete(`${API_BASE}/users/${id}`)\n//       .then(() => setUsers(users.filter((user) => user._id !== id)))\n//       .catch((error) => console.error(\"Feil ved sletting av bruker:\", error));\n//   };\n\n//   return (\n//     <div className=\"p-8\">\n//       <h1 className=\"mb-4 text-2xl font-bold\">Brukeradministrasjon</h1>\n\n//       <form onSubmit={addUser} className=\"mb-8\">\n//         <h2 className=\"mb-4 text-xl\">Registrer ny bruker</h2>\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Navn\"\n//           value={newUser.name}\n//           onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Brukernavn\"\n//           value={newUser.username}\n//           onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-post\"\n//           value={newUser.email}\n//           onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"password\"\n//           placeholder=\"Passord\"\n//           value={newUser.password}\n//           onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <select\n//           value={newUser.role}\n//           onChange={(e) => setNewUser({ ...newUser, role: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//         >\n//           <option value=\"user\">User</option>\n//           <option value=\"admin\">Admin</option>\n//         </select>\n\n//         <button\n//           type=\"submit\"\n//           className=\"p-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\n//         >\n//           Registrer bruker\n//         </button>\n//       </form>\n\n//       <h2 className=\"mb-4 text-xl\">Eksisterende brukere</h2>\n//       <ul className=\"space-y-4\">\n//         {users.map((user) => (\n//           <li key={user._id} className=\"p-4 bg-white rounded shadow\">\n//             <p>\n//               <strong>Navn:</strong> {user.name}\n//             </p>\n//             <p>\n//               <strong>Passord:</strong> {user.password}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {user.email}\n//             </p>\n//             <p>\n//               <strong>Rolle:</strong> {user.role}\n//             </p>\n//             <button\n//               onClick={() => deleteUser(user._id)}\n//               className=\"p-2 mt-2 text-white bg-red-500 rounded hover:bg-red-600\"\n//             >\n//               Slett\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default ManageUsers;","map":{"version":3,"names":[],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/ManageUsers.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const API_BASE = \"https://crudcrud.com/api/07b637f165124acb8ccc0cff42612b46\";\n\n// function ManageUsers() {\n//   const [users, setUsers] = useState([]);\n//   const [newUser, setNewUser] = useState({\n//     name: \"\",\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     role: \"user\",\n//   });\n\n//   // Hent alle brukere\n//   useEffect(() => {\n//     axios\n//       .get(`${API_BASE}/users`)\n//       .then((response) => setUsers(response.data))\n//       .catch((error) => console.error(\"Feil ved henting av brukere:\", error));\n//   }, []);\n\n//   // Registrer ny bruker\n//   const addUser = (e) => {\n//     e.preventDefault();\n//     axios\n//       .post(`${API_BASE}/users`, newUser)\n//       .then((response) => {\n//         setUsers([...users, response.data]);\n//         setNewUser({ name: \"\", email: \"\", password: \"\", role: \"user\" });\n//       })\n//       .catch((error) => console.error(\"Feil ved oppretting av bruker:\", error));\n//   };\n\n//   // Slett bruker\n//   const deleteUser = (id) => {\n//     axios\n//       .delete(`${API_BASE}/users/${id}`)\n//       .then(() => setUsers(users.filter((user) => user._id !== id)))\n//       .catch((error) => console.error(\"Feil ved sletting av bruker:\", error));\n//   };\n\n//   return (\n//     <div className=\"p-8\">\n//       <h1 className=\"mb-4 text-2xl font-bold\">Brukeradministrasjon</h1>\n\n//       <form onSubmit={addUser} className=\"mb-8\">\n//         <h2 className=\"mb-4 text-xl\">Registrer ny bruker</h2>\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Navn\"\n//           value={newUser.name}\n//           onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Brukernavn\"\n//           value={newUser.username}\n//           onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-post\"\n//           value={newUser.email}\n//           onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"password\"\n//           placeholder=\"Passord\"\n//           value={newUser.password}\n//           onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <select\n//           value={newUser.role}\n//           onChange={(e) => setNewUser({ ...newUser, role: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//         >\n//           <option value=\"user\">User</option>\n//           <option value=\"admin\">Admin</option>\n//         </select>\n\n//         <button\n//           type=\"submit\"\n//           className=\"p-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\n//         >\n//           Registrer bruker\n//         </button>\n//       </form>\n\n//       <h2 className=\"mb-4 text-xl\">Eksisterende brukere</h2>\n//       <ul className=\"space-y-4\">\n//         {users.map((user) => (\n//           <li key={user._id} className=\"p-4 bg-white rounded shadow\">\n//             <p>\n//               <strong>Navn:</strong> {user.name}\n//             </p>\n//             <p>\n//               <strong>Passord:</strong> {user.password}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {user.email}\n//             </p>\n//             <p>\n//               <strong>Rolle:</strong> {user.role}\n//             </p>\n//             <button\n//               onClick={() => deleteUser(user._id)}\n//               className=\"p-2 mt-2 text-white bg-red-500 rounded hover:bg-red-600\"\n//             >\n//               Slett\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default ManageUsers;\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}