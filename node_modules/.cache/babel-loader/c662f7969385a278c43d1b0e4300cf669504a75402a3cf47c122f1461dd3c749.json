{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/components/CVForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   createCV,\n//   updateCV,\n//   deleteCV,\n//   fetchCVsByUserId,\n// } from \"../services/api\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   const [id, setId] = useState(null); // For edit purposes\n\n//   useEffect(() => {\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     const fetchUserCVs = async () => {\n//       setLoading(true);\n//       try {\n//         const cvs = await fetchCVsByUserId(currentUserId); // Hent alle CV-er\n//         const filteredCVs = cvs.filter((cv) => cv.userId === currentUserId); // Filtrer CV-er for den spesifikke brukeren\n//         setCvList(filteredCVs); // Sett de filtrerte CV-ene i tilstand\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUserCVs(); // Hent CV-er for innlogget bruker\n//   }, [navigate]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     try {\n//       const newCv = {\n//         ...cv,\n//         userId: currentUserId, // Sørg for at userId settes korrekt her\n//       };\n\n//       if (isEditing) {\n//         await updateCV(id, newCv); // Bruk ID for å oppdatere\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(newCv); // Opprett ny CV\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]); // Legg til det nye CV-et i listen\n//       }\n\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error(\"Feil ved oppretting eller oppdatering av CV:\", error);\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async (cvId) => {\n//     try {\n//       await deleteCV(cvId); // Slett CV basert på ID\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item._id !== cvId)); // Fjern CV fra listen etter sletting\n//       navigate(\"/cvs\"); // Naviger til listen av CV-er\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   const handleEdit = (cvItem) => {\n//     setCv({\n//       personalInfo: {\n//         name: cvItem.personalInfo.name,\n//         email: cvItem.personalInfo.email,\n//         phone: cvItem.personalInfo.phone,\n//       },\n//       skills: cvItem.skills,\n//       education: cvItem.education,\n//       experience: cvItem.experience,\n//       references: cvItem.references,\n//     });\n//     setIsEditing(true);\n//     setId(cvItem._id); // Sett ID for redigering\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={() => handleDelete(id)}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem, index) => (\n//           <li\n//             key={cvItem._id || index} // Bruk ID for hver CV\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//             <button\n//               onClick={() => handleEdit(cvItem)}\n//               className=\"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\"\n//             >\n//               Rediger\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createCV } from \"../services/api\"; // Husk at du må ha riktig import for å sende dataene til API-et.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CVForm = () => {\n  _s();\n  const [cv, setCv] = useState({\n    personalInfo: {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    },\n    skills: \"\",\n    education: [{\n      institution: \"\",\n      degree: \"\",\n      year: \"\"\n    }],\n    experience: [{\n      title: \"\",\n      company: \"\",\n      years: \"\"\n    }],\n    references: [{\n      name: \"\",\n      contactInfo: \"\"\n    }]\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n\n  // Håndter endringer i inputfeltene\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCv(prevCv => ({\n      ...prevCv,\n      [name]: value\n    }));\n  };\n\n  // Håndter innsending av skjemaet\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Hent userId fra localStorage\n    const currentUserId = localStorage.getItem(\"userId\");\n    if (!currentUserId) {\n      alert(\"Brukeren er ikke logget inn.\");\n      navigate(\"/login\");\n      return;\n    }\n    const newCv = {\n      ...cv,\n      userId: currentUserId // Sørg for at userId blir sendt med\n    };\n    setIsSubmitting(true);\n    try {\n      await createCV(newCv); // Anta at createCV er en API-funksjon som sender data til serveren\n      alert(\"CV opprettet!\");\n      navigate(\"/cvs\"); // Naviger tilbake til CV-listen eller en annen relevant side\n    } catch (error) {\n      console.error(\"Feil ved oppretting av CV:\", error);\n      alert(\"Feil ved oppretting av CV.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Dynamisk håndtering av flere utdanninger, erfaringer og referanser\n  const handleArrayChange = (e, section, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedSection = [...cv[section]];\n    updatedSection[index] = {\n      ...updatedSection[index],\n      [name]: value\n    };\n    setCv({\n      ...cv,\n      [section]: updatedSection\n    });\n  };\n  const addSectionItem = section => {\n    if (section === \"education\") {\n      setCv({\n        ...cv,\n        education: [...cv.education, {\n          institution: \"\",\n          degree: \"\",\n          year: \"\"\n        }]\n      });\n    } else if (section === \"experience\") {\n      setCv({\n        ...cv,\n        experience: [...cv.experience, {\n          title: \"\",\n          company: \"\",\n          years: \"\"\n        }]\n      });\n    } else if (section === \"references\") {\n      setCv({\n        ...cv,\n        references: [...cv.references, {\n          name: \"\",\n          contactInfo: \"\"\n        }]\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-20 text-3xl font-bold text-[#023E8A] text-center\",\n      children: \"Opprett din CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"max-w-2xl p-10 mx-auto bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-6 text-xl text-[#023E8A]\",\n        children: \"Personlig Informasjon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Navn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: cv.personalInfo.name,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"E-post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: cv.personalInfo.email,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Telefonnummer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        value: cv.personalInfo.phone,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-8 text-xl text-[#023E8A]\",\n        children: \"Ferdigheter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"skills\",\n        value: cv.skills,\n        onChange: handleChange,\n        className: \"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\",\n        placeholder: \"JavaScript, React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-8 text-xl text-[#023E8A]\",\n        children: \"Utdanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), cv.education.map((edu, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"institution\",\n          value: edu.institution,\n          onChange: e => handleArrayChange(e, \"education\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"Institusjon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"degree\",\n          value: edu.degree,\n          onChange: e => handleArrayChange(e, \"education\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"Grad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"year\",\n          value: edu.year,\n          onChange: e => handleArrayChange(e, \"education\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"\\xC5r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addSectionItem(\"education\"),\n        className: \"w-full p-3 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6] mt-4\",\n        children: \"Legg til Utdanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-8 text-xl text-[#023E8A]\",\n        children: \"Erfaring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), cv.experience.map((exp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: exp.title,\n          onChange: e => handleArrayChange(e, \"experience\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"Tittel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"company\",\n          value: exp.company,\n          onChange: e => handleArrayChange(e, \"experience\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"Firma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"years\",\n          value: exp.years,\n          onChange: e => handleArrayChange(e, \"experience\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"\\xC5r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addSectionItem(\"experience\"),\n        className: \"w-full p-3 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6] mt-4\",\n        children: \"Legg til Erfaring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-8 text-xl text-[#023E8A]\",\n        children: \"Referanser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), cv.references.map((ref, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: ref.name,\n          onChange: e => handleArrayChange(e, \"references\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"Navn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"contactInfo\",\n          value: ref.contactInfo,\n          onChange: e => handleArrayChange(e, \"references\", index),\n          className: \"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\",\n          placeholder: \"Kontaktinfo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addSectionItem(\"references\"),\n        className: \"w-full p-3 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6] mt-4\",\n        children: \"Legg til Referanse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full p-3 mt-8 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:outline-none focus:ring-4 focus:ring-[#90E0EF]\",\n        disabled: isSubmitting,\n        children: isSubmitting ? \"Sender...\" : \"Opprett CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(CVForm, \"QzS64esKmVpDUSnwimV2dZf/0aI=\", false, function () {\n  return [useNavigate];\n});\n_c = CVForm;\nexport default CVForm;\nvar _c;\n$RefreshReg$(_c, \"CVForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","createCV","jsxDEV","_jsxDEV","CVForm","_s","cv","setCv","personalInfo","name","email","phone","skills","education","institution","degree","year","experience","title","company","years","references","contactInfo","isSubmitting","setIsSubmitting","navigate","handleChange","e","value","target","prevCv","handleSubmit","preventDefault","currentUserId","localStorage","getItem","alert","newCv","userId","error","console","handleArrayChange","section","index","updatedSection","addSectionItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","placeholder","map","edu","onClick","exp","ref","disabled","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/components/CVForm.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   createCV,\n//   updateCV,\n//   deleteCV,\n//   fetchCVsByUserId,\n// } from \"../services/api\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   const [id, setId] = useState(null); // For edit purposes\n\n//   useEffect(() => {\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     const fetchUserCVs = async () => {\n//       setLoading(true);\n//       try {\n//         const cvs = await fetchCVsByUserId(currentUserId); // Hent alle CV-er\n//         const filteredCVs = cvs.filter((cv) => cv.userId === currentUserId); // Filtrer CV-er for den spesifikke brukeren\n//         setCvList(filteredCVs); // Sett de filtrerte CV-ene i tilstand\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUserCVs(); // Hent CV-er for innlogget bruker\n//   }, [navigate]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     try {\n//       const newCv = {\n//         ...cv,\n//         userId: currentUserId, // Sørg for at userId settes korrekt her\n//       };\n\n//       if (isEditing) {\n//         await updateCV(id, newCv); // Bruk ID for å oppdatere\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(newCv); // Opprett ny CV\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]); // Legg til det nye CV-et i listen\n//       }\n\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error(\"Feil ved oppretting eller oppdatering av CV:\", error);\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async (cvId) => {\n//     try {\n//       await deleteCV(cvId); // Slett CV basert på ID\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item._id !== cvId)); // Fjern CV fra listen etter sletting\n//       navigate(\"/cvs\"); // Naviger til listen av CV-er\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   const handleEdit = (cvItem) => {\n//     setCv({\n//       personalInfo: {\n//         name: cvItem.personalInfo.name,\n//         email: cvItem.personalInfo.email,\n//         phone: cvItem.personalInfo.phone,\n//       },\n//       skills: cvItem.skills,\n//       education: cvItem.education,\n//       experience: cvItem.experience,\n//       references: cvItem.references,\n//     });\n//     setIsEditing(true);\n//     setId(cvItem._id); // Sett ID for redigering\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={() => handleDelete(id)}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem, index) => (\n//           <li\n//             key={cvItem._id || index} // Bruk ID for hver CV\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//             <button\n//               onClick={() => handleEdit(cvItem)}\n//               className=\"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\"\n//             >\n//               Rediger\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createCV } from \"../services/api\"; // Husk at du må ha riktig import for å sende dataene til API-et.\n\nconst CVForm = () => {\n  const [cv, setCv] = useState({\n    personalInfo: { name: \"\", email: \"\", phone: \"\" },\n    skills: \"\",\n    education: [{ institution: \"\", degree: \"\", year: \"\" }],\n    experience: [{ title: \"\", company: \"\", years: \"\" }],\n    references: [{ name: \"\", contactInfo: \"\" }],\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n\n  // Håndter endringer i inputfeltene\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCv((prevCv) => ({\n      ...prevCv,\n      [name]: value,\n    }));\n  };\n\n  // Håndter innsending av skjemaet\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Hent userId fra localStorage\n    const currentUserId = localStorage.getItem(\"userId\");\n    if (!currentUserId) {\n      alert(\"Brukeren er ikke logget inn.\");\n      navigate(\"/login\");\n      return;\n    }\n\n    const newCv = {\n      ...cv,\n      userId: currentUserId, // Sørg for at userId blir sendt med\n    };\n\n    setIsSubmitting(true);\n\n    try {\n      await createCV(newCv); // Anta at createCV er en API-funksjon som sender data til serveren\n      alert(\"CV opprettet!\");\n      navigate(\"/cvs\"); // Naviger tilbake til CV-listen eller en annen relevant side\n    } catch (error) {\n      console.error(\"Feil ved oppretting av CV:\", error);\n      alert(\"Feil ved oppretting av CV.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Dynamisk håndtering av flere utdanninger, erfaringer og referanser\n  const handleArrayChange = (e, section, index) => {\n    const { name, value } = e.target;\n    const updatedSection = [...cv[section]];\n    updatedSection[index] = { ...updatedSection[index], [name]: value };\n    setCv({ ...cv, [section]: updatedSection });\n  };\n\n  const addSectionItem = (section) => {\n    if (section === \"education\") {\n      setCv({\n        ...cv,\n        education: [...cv.education, { institution: \"\", degree: \"\", year: \"\" }],\n      });\n    } else if (section === \"experience\") {\n      setCv({\n        ...cv,\n        experience: [...cv.experience, { title: \"\", company: \"\", years: \"\" }],\n      });\n    } else if (section === \"references\") {\n      setCv({\n        ...cv,\n        references: [...cv.references, { name: \"\", contactInfo: \"\" }],\n      });\n    }\n  };\n\n  return (\n    <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n      <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n        Opprett din CV\n      </h1>\n\n      <form\n        onSubmit={handleSubmit}\n        className=\"max-w-2xl p-10 mx-auto bg-white rounded-lg shadow-lg\"\n      >\n        <h2 className=\"mb-6 text-xl text-[#023E8A]\">Personlig Informasjon</h2>\n\n        <label className=\"block mb-2\">Navn</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={cv.personalInfo.name}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <label className=\"block mb-2\">E-post</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={cv.personalInfo.email}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <label className=\"block mb-2\">Telefonnummer</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={cv.personalInfo.phone}\n          onChange={handleChange}\n          required\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n        />\n\n        <h2 className=\"mt-8 text-xl text-[#023E8A]\">Ferdigheter</h2>\n        <input\n          type=\"text\"\n          name=\"skills\"\n          value={cv.skills}\n          onChange={handleChange}\n          className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n          placeholder=\"JavaScript, React\"\n        />\n\n        <h2 className=\"mt-8 text-xl text-[#023E8A]\">Utdanning</h2>\n        {cv.education.map((edu, index) => (\n          <div key={index} className=\"mb-4 space-y-4\">\n            <input\n              type=\"text\"\n              name=\"institution\"\n              value={edu.institution}\n              onChange={(e) => handleArrayChange(e, \"education\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"Institusjon\"\n            />\n            <input\n              type=\"text\"\n              name=\"degree\"\n              value={edu.degree}\n              onChange={(e) => handleArrayChange(e, \"education\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"Grad\"\n            />\n            <input\n              type=\"text\"\n              name=\"year\"\n              value={edu.year}\n              onChange={(e) => handleArrayChange(e, \"education\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"År\"\n            />\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() => addSectionItem(\"education\")}\n          className=\"w-full p-3 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6] mt-4\"\n        >\n          Legg til Utdanning\n        </button>\n\n        <h2 className=\"mt-8 text-xl text-[#023E8A]\">Erfaring</h2>\n        {cv.experience.map((exp, index) => (\n          <div key={index} className=\"mb-4 space-y-4\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={exp.title}\n              onChange={(e) => handleArrayChange(e, \"experience\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"Tittel\"\n            />\n            <input\n              type=\"text\"\n              name=\"company\"\n              value={exp.company}\n              onChange={(e) => handleArrayChange(e, \"experience\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"Firma\"\n            />\n            <input\n              type=\"text\"\n              name=\"years\"\n              value={exp.years}\n              onChange={(e) => handleArrayChange(e, \"experience\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"År\"\n            />\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() => addSectionItem(\"experience\")}\n          className=\"w-full p-3 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6] mt-4\"\n        >\n          Legg til Erfaring\n        </button>\n\n        <h2 className=\"mt-8 text-xl text-[#023E8A]\">Referanser</h2>\n        {cv.references.map((ref, index) => (\n          <div key={index} className=\"mb-4 space-y-4\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={ref.name}\n              onChange={(e) => handleArrayChange(e, \"references\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"Navn\"\n            />\n            <input\n              type=\"text\"\n              name=\"contactInfo\"\n              value={ref.contactInfo}\n              onChange={(e) => handleArrayChange(e, \"references\", index)}\n              className=\"w-full p-3 border-2 border-[#023E8A] rounded-lg mb-2\"\n              placeholder=\"Kontaktinfo\"\n            />\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() => addSectionItem(\"references\")}\n          className=\"w-full p-3 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6] mt-4\"\n        >\n          Legg til Referanse\n        </button>\n\n        <button\n          type=\"submit\"\n          className=\"w-full p-3 mt-8 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:outline-none focus:ring-4 focus:ring-[#90E0EF]\"\n          disabled={isSubmitting}\n        >\n          {isSubmitting ? \"Sender...\" : \"Opprett CV\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CVForm;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGT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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}