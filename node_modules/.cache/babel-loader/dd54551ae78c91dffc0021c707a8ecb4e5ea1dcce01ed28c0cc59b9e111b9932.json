{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/pages/ManageUsers.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const API_BASE = \"https://crudcrud.com/api/07b637f165124acb8ccc0cff42612b46\";\n\n// function ManageUsers() {\n//   const [users, setUsers] = useState([]);\n//   const [newUser, setNewUser] = useState({\n//     name: \"\",\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     role: \"user\",\n//   });\n\n//   // Hent alle brukere\n//   useEffect(() => {\n//     axios\n//       .get(`${API_BASE}/users`)\n//       .then((response) => setUsers(response.data))\n//       .catch((error) => console.error(\"Feil ved henting av brukere:\", error));\n//   }, []);\n\n//   // Registrer ny bruker\n//   const addUser = (e) => {\n//     e.preventDefault();\n//     axios\n//       .post(`${API_BASE}/users`, newUser)\n//       .then((response) => {\n//         setUsers([...users, response.data]);\n//         setNewUser({ name: \"\", email: \"\", password: \"\", role: \"user\" });\n//       })\n//       .catch((error) => console.error(\"Feil ved oppretting av bruker:\", error));\n//   };\n\n//   // Slett bruker\n//   const deleteUser = (id) => {\n//     axios\n//       .delete(`${API_BASE}/users/${id}`)\n//       .then(() => setUsers(users.filter((user) => user._id !== id)))\n//       .catch((error) => console.error(\"Feil ved sletting av bruker:\", error));\n//   };\n\n//   return (\n//     <div className=\"p-8\">\n//       <h1 className=\"mb-4 text-2xl font-bold\">Brukeradministrasjon</h1>\n\n//       <form onSubmit={addUser} className=\"mb-8\">\n//         <h2 className=\"mb-4 text-xl\">Registrer ny bruker</h2>\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Navn\"\n//           value={newUser.name}\n//           onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Brukernavn\"\n//           value={newUser.username}\n//           onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-post\"\n//           value={newUser.email}\n//           onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"password\"\n//           placeholder=\"Passord\"\n//           value={newUser.password}\n//           onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <select\n//           value={newUser.role}\n//           onChange={(e) => setNewUser({ ...newUser, role: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//         >\n//           <option value=\"user\">User</option>\n//           <option value=\"admin\">Admin</option>\n//         </select>\n\n//         <button\n//           type=\"submit\"\n//           className=\"p-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\n//         >\n//           Registrer bruker\n//         </button>\n//       </form>\n\n//       <h2 className=\"mb-4 text-xl\">Eksisterende brukere</h2>\n//       <ul className=\"space-y-4\">\n//         {users.map((user) => (\n//           <li key={user._id} className=\"p-4 bg-white rounded shadow\">\n//             <p>\n//               <strong>Navn:</strong> {user.name}\n//             </p>\n//             <p>\n//               <strong>Passord:</strong> {user.password}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {user.email}\n//             </p>\n//             <p>\n//               <strong>Rolle:</strong> {user.role}\n//             </p>\n//             <button\n//               onClick={() => deleteUser(user._id)}\n//               className=\"p-2 mt-2 text-white bg-red-500 rounded hover:bg-red-600\"\n//             >\n//               Slett\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default ManageUsers;\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://crudcrud.com/api/07b637f165124acb8ccc0cff42612b46\";\nfunction ManageUsers() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"user\"\n  });\n\n  // Hent alle brukere\n  useEffect(() => {\n    fetch(`${API_BASE}/users`).then(response => response.json()).then(data => setUsers(data)).catch(error => console.error(\"Feil ved henting av brukere:\", error));\n  }, []);\n\n  // Registrer ny bruker\n  const addUser = e => {\n    e.preventDefault();\n    fetch(`${API_BASE}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(response => response.json()).then(data => {\n      setUsers([...users, data]);\n      setNewUser({\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        role: \"user\"\n      });\n    }).catch(error => console.error(\"Feil ved oppretting av bruker:\", error));\n  };\n\n  // Oppdater bruker\n  const updateUser = e => {\n    e.preventDefault();\n    if (!editingUser) return;\n    fetch(`${API_BASE}/users/${editingUser._id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(response => response.json()).then(updatedUser => {\n      setUsers(users.map(user => user._id === updatedUser._id ? updatedUser : user));\n      setNewUser({\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        role: \"user\"\n      });\n      setEditingUser(null); // Reset editing state\n    }).catch(error => console.error(\"Feil ved oppdatering av bruker:\", error));\n  };\n\n  // Slett bruker\n  const deleteUser = id => {\n    fetch(`${API_BASE}/users/${id}`, {\n      method: \"DELETE\"\n    }).then(() => setUsers(users.filter(user => user._id !== id))).catch(error => console.error(\"Feil ved sletting av bruker:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4 text-2xl font-bold\",\n      children: \"Brukeradministrasjon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUser,\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4 text-xl\",\n        children: \"Registrer ny bruker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Navn\",\n        value: newUser.name,\n        onChange: e => setNewUser({\n          ...newUser,\n          name: e.target.value\n        }),\n        className: \"w-full p-2 mb-4 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Brukernavn\",\n        value: newUser.username,\n        onChange: e => setNewUser({\n          ...newUser,\n          username: e.target.value\n        }),\n        className: \"w-full p-2 mb-4 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"E-post\",\n        value: newUser.email,\n        onChange: e => setNewUser({\n          ...newUser,\n          email: e.target.value\n        }),\n        className: \"w-full p-2 mb-4 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Passord\",\n        value: newUser.password,\n        onChange: e => setNewUser({\n          ...newUser,\n          password: e.target.value\n        }),\n        className: \"w-full p-2 mb-4 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newUser.role,\n        onChange: e => setNewUser({\n          ...newUser,\n          role: e.target.value\n        }),\n        className: \"w-full p-2 mb-4 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"p-2 text-white bg-blue-500 rounded hover:bg-blue-600\",\n        children: \"Registrer bruker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 text-xl\",\n      children: \"Eksisterende brukere\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"p-4 bg-white rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Navn:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), \" \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Brukernavn:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), \" \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"E-post:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), \" \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Passord:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), \" \", user.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rolle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), \" \", user.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteUser(user._id),\n          className: \"p-2 mt-2 text-white bg-red-500 rounded hover:bg-red-600\",\n          children: \"Slett\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageUsers, \"C82Ecz4DaWa/A8gIru3LaPO8MQ0=\");\n_c = ManageUsers;\nexport default ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_BASE","ManageUsers","_s","users","setUsers","newUser","setNewUser","name","username","email","password","role","fetch","then","response","json","data","catch","error","console","addUser","e","preventDefault","method","headers","body","JSON","stringify","updateUser","editingUser","_id","updatedUser","map","user","setEditingUser","deleteUser","id","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/ManageUsers.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const API_BASE = \"https://crudcrud.com/api/07b637f165124acb8ccc0cff42612b46\";\n\n// function ManageUsers() {\n//   const [users, setUsers] = useState([]);\n//   const [newUser, setNewUser] = useState({\n//     name: \"\",\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     role: \"user\",\n//   });\n\n//   // Hent alle brukere\n//   useEffect(() => {\n//     axios\n//       .get(`${API_BASE}/users`)\n//       .then((response) => setUsers(response.data))\n//       .catch((error) => console.error(\"Feil ved henting av brukere:\", error));\n//   }, []);\n\n//   // Registrer ny bruker\n//   const addUser = (e) => {\n//     e.preventDefault();\n//     axios\n//       .post(`${API_BASE}/users`, newUser)\n//       .then((response) => {\n//         setUsers([...users, response.data]);\n//         setNewUser({ name: \"\", email: \"\", password: \"\", role: \"user\" });\n//       })\n//       .catch((error) => console.error(\"Feil ved oppretting av bruker:\", error));\n//   };\n\n//   // Slett bruker\n//   const deleteUser = (id) => {\n//     axios\n//       .delete(`${API_BASE}/users/${id}`)\n//       .then(() => setUsers(users.filter((user) => user._id !== id)))\n//       .catch((error) => console.error(\"Feil ved sletting av bruker:\", error));\n//   };\n\n//   return (\n//     <div className=\"p-8\">\n//       <h1 className=\"mb-4 text-2xl font-bold\">Brukeradministrasjon</h1>\n\n//       <form onSubmit={addUser} className=\"mb-8\">\n//         <h2 className=\"mb-4 text-xl\">Registrer ny bruker</h2>\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Navn\"\n//           value={newUser.name}\n//           onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Brukernavn\"\n//           value={newUser.username}\n//           onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-post\"\n//           value={newUser.email}\n//           onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <input\n//           type=\"password\"\n//           placeholder=\"Passord\"\n//           value={newUser.password}\n//           onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//           required\n//         />\n\n//         <select\n//           value={newUser.role}\n//           onChange={(e) => setNewUser({ ...newUser, role: e.target.value })}\n//           className=\"w-full p-2 mb-4 border rounded\"\n//         >\n//           <option value=\"user\">User</option>\n//           <option value=\"admin\">Admin</option>\n//         </select>\n\n//         <button\n//           type=\"submit\"\n//           className=\"p-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\n//         >\n//           Registrer bruker\n//         </button>\n//       </form>\n\n//       <h2 className=\"mb-4 text-xl\">Eksisterende brukere</h2>\n//       <ul className=\"space-y-4\">\n//         {users.map((user) => (\n//           <li key={user._id} className=\"p-4 bg-white rounded shadow\">\n//             <p>\n//               <strong>Navn:</strong> {user.name}\n//             </p>\n//             <p>\n//               <strong>Passord:</strong> {user.password}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {user.email}\n//             </p>\n//             <p>\n//               <strong>Rolle:</strong> {user.role}\n//             </p>\n//             <button\n//               onClick={() => deleteUser(user._id)}\n//               className=\"p-2 mt-2 text-white bg-red-500 rounded hover:bg-red-600\"\n//             >\n//               Slett\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default ManageUsers;\nimport React, { useState, useEffect } from \"react\";\n\nconst API_BASE = \"https://crudcrud.com/api/07b637f165124acb8ccc0cff42612b46\";\n\nfunction ManageUsers() {\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"user\",\n  });\n\n  // Hent alle brukere\n  useEffect(() => {\n    fetch(`${API_BASE}/users`)\n      .then((response) => response.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.error(\"Feil ved henting av brukere:\", error));\n  }, []);\n\n  // Registrer ny bruker\n  const addUser = (e) => {\n    e.preventDefault();\n    fetch(`${API_BASE}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newUser),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers([...users, data]);\n        setNewUser({\n          name: \"\",\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          role: \"user\",\n        });\n      })\n      .catch((error) => console.error(\"Feil ved oppretting av bruker:\", error));\n  };\n\n  // Oppdater bruker\n  const updateUser = (e) => {\n    e.preventDefault();\n    if (!editingUser) return;\n\n    fetch(`${API_BASE}/users/${editingUser._id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newUser),\n    })\n      .then((response) => response.json())\n      .then((updatedUser) => {\n        setUsers(\n          users.map((user) =>\n            user._id === updatedUser._id ? updatedUser : user\n          )\n        );\n        setNewUser({\n          name: \"\",\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          role: \"user\",\n        });\n        setEditingUser(null); // Reset editing state\n      })\n      .catch((error) =>\n        console.error(\"Feil ved oppdatering av bruker:\", error)\n      );\n  };\n\n  // Slett bruker\n  const deleteUser = (id) => {\n    fetch(`${API_BASE}/users/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => setUsers(users.filter((user) => user._id !== id)))\n      .catch((error) => console.error(\"Feil ved sletting av bruker:\", error));\n  };\n\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"mb-4 text-2xl font-bold\">Brukeradministrasjon</h1>\n\n      <form onSubmit={addUser} className=\"mb-8\">\n        <h2 className=\"mb-4 text-xl\">Registrer ny bruker</h2>\n\n        <input\n          type=\"text\"\n          placeholder=\"Navn\"\n          value={newUser.name}\n          onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\n          className=\"w-full p-2 mb-4 border rounded\"\n          required\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Brukernavn\"\n          value={newUser.username}\n          onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\n          className=\"w-full p-2 mb-4 border rounded\"\n          required\n        />\n\n        <input\n          type=\"email\"\n          placeholder=\"E-post\"\n          value={newUser.email}\n          onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\n          className=\"w-full p-2 mb-4 border rounded\"\n          required\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Passord\"\n          value={newUser.password}\n          onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\n          className=\"w-full p-2 mb-4 border rounded\"\n          required\n        />\n\n        <select\n          value={newUser.role}\n          onChange={(e) => setNewUser({ ...newUser, role: e.target.value })}\n          className=\"w-full p-2 mb-4 border rounded\"\n        >\n          <option value=\"user\">User</option>\n          <option value=\"admin\">Admin</option>\n        </select>\n\n        <button\n          type=\"submit\"\n          className=\"p-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\n        >\n          Registrer bruker\n        </button>\n      </form>\n\n      <h2 className=\"mb-4 text-xl\">Eksisterende brukere</h2>\n      <ul className=\"space-y-4\">\n        {users.map((user) => (\n          <li key={user._id} className=\"p-4 bg-white rounded shadow\">\n            <p>\n              <strong>Navn:</strong> {user.name}\n            </p>\n\n            <p>\n              <strong>Brukernavn:</strong> {user.username}\n            </p>\n\n            <p>\n              <strong>E-post:</strong> {user.email}\n            </p>\n\n            <p>\n              <strong>Passord:</strong> {user.password}\n            </p>\n\n            <p>\n              <strong>Rolle:</strong> {user.role}\n            </p>\n\n            <button\n              onClick={() => deleteUser(user._id)}\n              className=\"p-2 mt-2 text-white bg-red-500 rounded hover:bg-red-600\"\n            >\n              Slett\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ManageUsers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}