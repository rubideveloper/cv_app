{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\"; // Importer API-funksjonene\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCV = () => {\n  _s();\n  const [cv, setCv] = useState({\n    personalInfo: {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    },\n    skills: [],\n    education: [],\n    experience: [],\n    references: []\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // For editing a specific CV\n  const [loading, setLoading] = useState(false);\n\n  // Fetch CV if we are editing\n  useEffect(() => {\n    if (id) {\n      const fetchCV = async () => {\n        setLoading(true);\n        try {\n          const response = await fetchAllCVs(id); // Bruk fetchAllCVs for å hente CV-en\n          setCv(response); // Sett CV-en til state\n          setIsEditing(true); // Sett redigeringsmodusen til true\n        } catch (error) {\n          console.error(\"Error fetching CV:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchCV();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let updatedCV;\n      if (isEditing) {\n        updatedCV = await updateCV(id, cv); // Bruk updateCV for å oppdatere eksisterende CV\n        alert(\"CV oppdatert!\");\n      } else {\n        updatedCV = await createCV(cv); // Bruk createCV for å opprette ny CV\n        alert(\"CV opprettet!\");\n      }\n      setCv(updatedCV);\n    } catch (error) {\n      alert(\"Feil ved oppretting eller oppdatering av CV.\");\n    }\n  };\n  const handleDelete = async () => {\n    try {\n      await deleteCV(id); // Bruk deleteCV for å slette CV-en\n      alert(\"CV slettet!\");\n      setCv({\n        // Fjern CV-en fra state etter sletting\n        personalInfo: {\n          name: \"\",\n          email: \"\",\n          phone: \"\"\n        },\n        skills: [],\n        education: [],\n        experience: [],\n        references: []\n      });\n    } catch (error) {\n      alert(\"Feil ved sletting av CV.\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCv({\n      ...cv,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isEditing ? \"Rediger CV\" : \"Opprett CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lasting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Navn:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"personalInfo.name\",\n          value: cv.personalInfo.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"E-post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"personalInfo.email\",\n          value: cv.personalInfo.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Telefonnummer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"personalInfo.phone\",\n          value: cv.personalInfo.phone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? \"Oppdater CV\" : \"Opprett CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      style: {\n        marginTop: \"10px\",\n        color: \"red\"\n      },\n      children: \"Slett CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(UserCV, \"PyWGQbVFSrmXqBSQEjaZXPyRadU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UserCV;\nexport default UserCV;\nvar _c;\n$RefreshReg$(_c, \"UserCV\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","createCV","updateCV","deleteCV","fetchAllCVs","jsxDEV","_jsxDEV","UserCV","_s","cv","setCv","personalInfo","name","email","phone","skills","education","experience","references","isEditing","setIsEditing","navigate","id","loading","setLoading","fetchCV","response","error","console","handleSubmit","e","preventDefault","updatedCV","alert","handleDelete","handleChange","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","onClick","style","marginTop","color","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/pages/UserCV.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createCV, updateCV, deleteCV, fetchAllCVs } from \"../services/api\"; // Importer API-funksjonene\n\nconst UserCV = () => {\n  const [cv, setCv] = useState({\n    personalInfo: { name: \"\", email: \"\", phone: \"\" },\n    skills: [],\n    education: [],\n    experience: [],\n    references: [],\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n  const { id } = useParams(); // For editing a specific CV\n  const [loading, setLoading] = useState(false);\n\n  // Fetch CV if we are editing\n  useEffect(() => {\n    if (id) {\n      const fetchCV = async () => {\n        setLoading(true);\n        try {\n          const response = await fetchAllCVs(id); // Bruk fetchAllCVs for å hente CV-en\n          setCv(response); // Sett CV-en til state\n          setIsEditing(true); // Sett redigeringsmodusen til true\n        } catch (error) {\n          console.error(\"Error fetching CV:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchCV();\n    }\n  }, [id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let updatedCV;\n      if (isEditing) {\n        updatedCV = await updateCV(id, cv); // Bruk updateCV for å oppdatere eksisterende CV\n        alert(\"CV oppdatert!\");\n      } else {\n        updatedCV = await createCV(cv); // Bruk createCV for å opprette ny CV\n        alert(\"CV opprettet!\");\n      }\n      setCv(updatedCV);\n    } catch (error) {\n      alert(\"Feil ved oppretting eller oppdatering av CV.\");\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteCV(id); // Bruk deleteCV for å slette CV-en\n      alert(\"CV slettet!\");\n      setCv({\n        // Fjern CV-en fra state etter sletting\n        personalInfo: { name: \"\", email: \"\", phone: \"\" },\n        skills: [],\n        education: [],\n        experience: [],\n        references: [],\n      });\n    } catch (error) {\n      alert(\"Feil ved sletting av CV.\");\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCv({\n      ...cv,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <h1>{isEditing ? \"Rediger CV\" : \"Opprett CV\"}</h1>\n      {loading ? <p>Lasting...</p> : null}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Navn:</label>\n          <input\n            type=\"text\"\n            name=\"personalInfo.name\"\n            value={cv.personalInfo.name}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>E-post:</label>\n          <input\n            type=\"email\"\n            name=\"personalInfo.email\"\n            value={cv.personalInfo.email}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>Telefonnummer:</label>\n          <input\n            type=\"text\"\n            name=\"personalInfo.phone\"\n            value={cv.personalInfo.phone}\n            onChange={handleChange}\n          />\n        </div>\n\n        {/* Her kan du legge til flere felt for ferdigheter, utdanning, erfaring og referanser */}\n\n        <button type=\"submit\">\n          {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n        </button>\n      </form>\n\n      {isEditing && (\n        <button\n          onClick={handleDelete}\n          style={{ marginTop: \"10px\", color: \"red\" }}\n        >\n          Slett CV\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default UserCV;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}