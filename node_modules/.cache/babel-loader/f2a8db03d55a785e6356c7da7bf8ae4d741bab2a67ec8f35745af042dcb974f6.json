{"ast":null,"code":"var _jsxFileName = \"/Users/rubengrytten/Desktop/cv_app/src/components/CVForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   createCV,\n//   updateCV,\n//   deleteCV,\n//   fetchCVsByUserId,\n// } from \"../services/api\";\n// import Navbar from \"../components/Navbar\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   const [id, setId] = useState(null); // For edit purposes\n\n//   useEffect(() => {\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     const fetchUserCVs = async () => {\n//       setLoading(true);\n//       try {\n//         const cvs = await fetchCVsByUserId(currentUserId); // Hent alle CV-er\n//         const filteredCVs = cvs.filter((cv) => cv.userId === currentUserId); // Filtrer CV-er for den spesifikke brukeren\n//         setCvList(filteredCVs); // Sett de filtrerte CV-ene i tilstand\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUserCVs(); // Hent CV-er for innlogget bruker\n//   }, [navigate]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     try {\n//       const newCv = {\n//         ...cv,\n//         userId: currentUserId, // Sørg for at userId settes korrekt her\n//       };\n\n//       if (isEditing) {\n//         await updateCV(id, newCv); // Bruk ID for å oppdatere\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(newCv); // Opprett ny CV\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]); // Legg til det nye CV-et i listen\n//       }\n\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error(\"Feil ved oppretting eller oppdatering av CV:\", error);\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async (cvId) => {\n//     try {\n//       await deleteCV(cvId); // Slett CV basert på ID\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item._id !== cvId)); // Fjern CV fra listen etter sletting\n//       navigate(\"/cvs\"); // Naviger til listen av CV-er\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   const handleEdit = (cvItem) => {\n//     setCv({\n//       personalInfo: {\n//         name: cvItem.personalInfo.name,\n//         email: cvItem.personalInfo.email,\n//         phone: cvItem.personalInfo.phone,\n//       },\n//       skills: cvItem.skills,\n//       education: cvItem.education,\n//       experience: cvItem.experience,\n//       references: cvItem.references,\n//     });\n//     setIsEditing(true);\n//     setId(cvItem._id); // Sett ID for redigering\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={() => handleDelete(id)}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem, index) => (\n//           <li\n//             key={cvItem._id || index} // Bruk ID for hver CV\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//             <button\n//               onClick={() => handleEdit(cvItem)}\n//               className=\"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\"\n//             >\n//               Rediger\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\nimport React from \"react\";\nimport InputField from \"./InputField\"; // Hvis du har laget et InputField-komponent\nimport { useForm } from \"react-hook-form\"; // Hvis du bruker react-hook-form for validering\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CVForm({\n  onSubmit\n}) {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-20 flex items-center justify-center text-3xl font-bold text-[#023E8A]\",\n      children: \"Opprett CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit) // Bruk handleSubmit fra react-hook-form\n      ,\n      className: \"max-w-sm p-10 mb-8 bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 text-xl text-[#023E8A]\",\n        children: \"Lag din CV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Fullt navn\",\n        ...register(\"personalInfo.name\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"email\",\n        placeholder: \"E-post\",\n        ...register(\"personalInfo.email\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"tel\",\n        placeholder: \"Telefonnummer\",\n        ...register(\"personalInfo.phone\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Ferdigheter (f.eks. JavaScript, React)\",\n        ...register(\"skills\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg text-[#023E8A] mb-2\",\n        children: \"Utdanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Institusjon\",\n        ...register(\"education[0].institution\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Grad\",\n        ...register(\"education[0].degree\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"\\xC5r\",\n        ...register(\"education[0].year\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg text-[#023E8A] mb-2\",\n        children: \"Erfaring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Stilling\",\n        ...register(\"experience[0].title\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Firma\",\n        ...register(\"experience[0].company\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg text-[#023E8A] mb-2\",\n        children: \"Referanser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Navn p\\xE5 referanse\",\n        ...register(\"references[0].name\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Kontaktinfo\",\n        ...register(\"references[0].contactInfo\", {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-16 p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\",\n          children: \"Lag CV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(CVForm, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n_c = CVForm;\nexport default CVForm;\nvar _c;\n$RefreshReg$(_c, \"CVForm\");","map":{"version":3,"names":["React","InputField","useForm","jsxDEV","_jsxDEV","CVForm","onSubmit","_s","register","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/rubengrytten/Desktop/cv_app/src/components/CVForm.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   createCV,\n//   updateCV,\n//   deleteCV,\n//   fetchCVsByUserId,\n// } from \"../services/api\";\n// import Navbar from \"../components/Navbar\";\n\n// const CVForm = () => {\n//   const [cv, setCv] = useState({\n//     personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//     skills: \"\",\n//     education: \"\",\n//     experience: \"\",\n//     references: \"\",\n//   });\n//   const [cvList, setCvList] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   const [id, setId] = useState(null); // For edit purposes\n\n//   useEffect(() => {\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     const fetchUserCVs = async () => {\n//       setLoading(true);\n//       try {\n//         const cvs = await fetchCVsByUserId(currentUserId); // Hent alle CV-er\n//         const filteredCVs = cvs.filter((cv) => cv.userId === currentUserId); // Filtrer CV-er for den spesifikke brukeren\n//         setCvList(filteredCVs); // Sett de filtrerte CV-ene i tilstand\n//       } catch (error) {\n//         alert(\"Feil ved henting av CV-er.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUserCVs(); // Hent CV-er for innlogget bruker\n//   }, [navigate]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const currentUserId = localStorage.getItem(\"userId\"); // Hent userId fra localStorage\n\n//     if (!currentUserId) {\n//       alert(\"Brukeren er ikke logget inn.\");\n//       navigate(\"/login\"); // Naviger til login-siden hvis ikke logget inn\n//       return; // Avbryt videre behandling\n//     }\n\n//     try {\n//       const newCv = {\n//         ...cv,\n//         userId: currentUserId, // Sørg for at userId settes korrekt her\n//       };\n\n//       if (isEditing) {\n//         await updateCV(id, newCv); // Bruk ID for å oppdatere\n//         alert(\"CV oppdatert!\");\n//       } else {\n//         await createCV(newCv); // Opprett ny CV\n//         alert(\"CV opprettet!\");\n//         setCvList([...cvList, newCv]); // Legg til det nye CV-et i listen\n//       }\n\n//       setCv({\n//         personalInfo: { name: \"\", email: \"\", phone: \"\" },\n//         skills: \"\",\n//         education: \"\",\n//         experience: \"\",\n//         references: \"\",\n//       });\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error(\"Feil ved oppretting eller oppdatering av CV:\", error);\n//       alert(\"Feil ved oppretting eller oppdatering av CV.\");\n//     }\n//   };\n\n//   const handleDelete = async (cvId) => {\n//     try {\n//       await deleteCV(cvId); // Slett CV basert på ID\n//       alert(\"CV slettet!\");\n//       setCvList(cvList.filter((item) => item._id !== cvId)); // Fjern CV fra listen etter sletting\n//       navigate(\"/cvs\"); // Naviger til listen av CV-er\n//     } catch (error) {\n//       alert(\"Feil ved sletting av CV.\");\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setCv({ ...cv, personalInfo: { ...cv.personalInfo, [name]: value } });\n//   };\n\n//   const handleEdit = (cvItem) => {\n//     setCv({\n//       personalInfo: {\n//         name: cvItem.personalInfo.name,\n//         email: cvItem.personalInfo.email,\n//         phone: cvItem.personalInfo.phone,\n//       },\n//       skills: cvItem.skills,\n//       education: cvItem.education,\n//       experience: cvItem.experience,\n//       references: cvItem.references,\n//     });\n//     setIsEditing(true);\n//     setId(cvItem._id); // Sett ID for redigering\n//   };\n\n//   return (\n//     <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n//       <Navbar />\n//       <h1 className=\"mb-20 text-3xl font-bold text-[#023E8A] text-center\">\n//         {isEditing ? \"Rediger CV\" : \"Opprett CV\"}\n//       </h1>\n\n//       <form\n//         onSubmit={handleSubmit}\n//         className=\"max-w-md p-10 mx-auto bg-white rounded-lg shadow-lg\"\n//       >\n//         <h2 className=\"mb-4 text-xl text-[#023E8A] text-center\">\n//           {isEditing ? \"Oppdater CV\" : \"Opprett ny CV\"}\n//         </h2>\n\n//         <label className=\"block mb-2\">Navn:</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={cv.personalInfo.name}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">E-post:</label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={cv.personalInfo.email}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <label className=\"block mb-2\">Telefonnummer:</label>\n//         <input\n//           type=\"tel\"\n//           name=\"phone\"\n//           value={cv.personalInfo.phone}\n//           onChange={handleChange}\n//           required\n//           className=\"w-full p-3 mb-4 border-2 border-[#023E8A] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#0077B6]\"\n//         />\n\n//         <button\n//           type=\"submit\"\n//           className=\"mt-8 w-full p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n//         >\n//           {isEditing ? \"Oppdater CV\" : \"Opprett CV\"}\n//         </button>\n\n//         {isEditing && (\n//           <button\n//             type=\"button\"\n//             onClick={() => handleDelete(id)}\n//             className=\"mt-4 w-full p-3 text-white bg-red-500 rounded-lg hover:bg-red-600 focus:ring-4 focus:ring-[#90E0EF]\"\n//           >\n//             Slett CV\n//           </button>\n//         )}\n//       </form>\n\n//       <h2 className=\"mt-16 mb-4 text-xl text-[#023E8A]\">Eksisterende CV-er:</h2>\n//       <ul className=\"space-y-4\">\n//         {cvList.map((cvItem, index) => (\n//           <li\n//             key={cvItem._id || index} // Bruk ID for hver CV\n//             className=\"p-4 bg-white border rounded-lg shadow-lg\"\n//           >\n//             <p>\n//               <strong>Navn:</strong> {cvItem.personalInfo.name}\n//             </p>\n//             <p>\n//               <strong>E-post:</strong> {cvItem.personalInfo.email}\n//             </p>\n//             <p>\n//               <strong>Telefonnummer:</strong> {cvItem.personalInfo.phone}\n//             </p>\n//             <button\n//               onClick={() => handleEdit(cvItem)}\n//               className=\"mt-2 w-full p-2 text-white bg-[#023E8A] rounded-lg hover:bg-[#0077B6]\"\n//             >\n//               Rediger\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default CVForm;\nimport React from \"react\";\nimport InputField from \"./InputField\"; // Hvis du har laget et InputField-komponent\nimport { useForm } from \"react-hook-form\"; // Hvis du bruker react-hook-form for validering\n\nfunction CVForm({ onSubmit }) {\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <div className=\"p-8 bg-gradient-to-r from-[#90E0EF] to-[#CAF0F8] min-h-screen\">\n      <h1 className=\"mb-20 flex items-center justify-center text-3xl font-bold text-[#023E8A]\">\n        Opprett CV\n      </h1>\n\n      <form\n        onSubmit={handleSubmit(onSubmit)} // Bruk handleSubmit fra react-hook-form\n        className=\"max-w-sm p-10 mb-8 bg-white rounded-lg shadow-lg\"\n      >\n        <h2 className=\"text-center mb-4 text-xl text-[#023E8A]\">Lag din CV</h2>\n\n        {/* Personal Information Section */}\n        <InputField\n          type=\"text\"\n          placeholder=\"Fullt navn\"\n          {...register(\"personalInfo.name\", { required: true })}\n          required\n        />\n\n        <InputField\n          type=\"email\"\n          placeholder=\"E-post\"\n          {...register(\"personalInfo.email\", { required: true })}\n          required\n        />\n\n        <InputField\n          type=\"tel\"\n          placeholder=\"Telefonnummer\"\n          {...register(\"personalInfo.phone\", { required: true })}\n          required\n        />\n\n        {/* Skills Section */}\n        <InputField\n          type=\"text\"\n          placeholder=\"Ferdigheter (f.eks. JavaScript, React)\"\n          {...register(\"skills\", { required: true })}\n          required\n        />\n\n        {/* Education Section */}\n        <h3 className=\"text-lg text-[#023E8A] mb-2\">Utdanning</h3>\n        <InputField\n          type=\"text\"\n          placeholder=\"Institusjon\"\n          {...register(\"education[0].institution\", { required: true })}\n          required\n        />\n        <InputField\n          type=\"text\"\n          placeholder=\"Grad\"\n          {...register(\"education[0].degree\", { required: true })}\n          required\n        />\n        <InputField\n          type=\"text\"\n          placeholder=\"År\"\n          {...register(\"education[0].year\", { required: true })}\n          required\n        />\n\n        {/* Experience Section */}\n        <h3 className=\"text-lg text-[#023E8A] mb-2\">Erfaring</h3>\n        <InputField\n          type=\"text\"\n          placeholder=\"Stilling\"\n          {...register(\"experience[0].title\", { required: true })}\n          required\n        />\n        <InputField\n          type=\"text\"\n          placeholder=\"Firma\"\n          {...register(\"experience[0].company\", { required: true })}\n          required\n        />\n\n        {/* References Section */}\n        <h3 className=\"text-lg text-[#023E8A] mb-2\">Referanser</h3>\n        <InputField\n          type=\"text\"\n          placeholder=\"Navn på referanse\"\n          {...register(\"references[0].name\", { required: true })}\n          required\n        />\n        <InputField\n          type=\"text\"\n          placeholder=\"Kontaktinfo\"\n          {...register(\"references[0].contactInfo\", { required: true })}\n          required\n        />\n\n        {/* Submit Button */}\n        <div className=\"flex justify-center w-full\">\n          <button\n            type=\"submit\"\n            className=\"mt-16 p-3 text-white bg-[#0077B6] rounded-lg hover:bg-[#023E8A] focus:ring-4 focus:ring-[#90E0EF]\"\n          >\n            Lag CV\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default CVForm;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AACvC,SAASC,OAAO,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,MAAMA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGP,OAAO,CAAC,CAAC;EAE5C,oBACEE,OAAA;IAAKM,SAAS,EAAC,+DAA+D;IAAAC,QAAA,gBAC5EP,OAAA;MAAIM,SAAS,EAAC,0EAA0E;MAAAC,QAAA,EAAC;IAEzF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELX,OAAA;MACEE,QAAQ,EAAEG,YAAY,CAACH,QAAQ,CAAE,CAAC;MAAA;MAClCI,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAE5DP,OAAA;QAAIM,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGvEX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QAAA,GACpBT,QAAQ,CAAC,mBAAmB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACrDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,QAAQ;QAAA,GAChBT,QAAQ,CAAC,oBAAoB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACtDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,KAAK;QACVC,WAAW,EAAC,eAAe;QAAA,GACvBT,QAAQ,CAAC,oBAAoB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACtDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAGFX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,wCAAwC;QAAA,GAChDT,QAAQ,CAAC,QAAQ,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QAC1CA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAGFX,OAAA;QAAIM,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QAAA,GACrBT,QAAQ,CAAC,0BAA0B,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QAC5DA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,MAAM;QAAA,GACdT,QAAQ,CAAC,qBAAqB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACvDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAI;QAAA,GACZT,QAAQ,CAAC,mBAAmB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACrDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAGFX,OAAA;QAAIM,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QAAA,GAClBT,QAAQ,CAAC,qBAAqB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACvDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QAAA,GACfT,QAAQ,CAAC,uBAAuB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACzDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAGFX,OAAA;QAAIM,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3DX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAmB;QAAA,GAC3BT,QAAQ,CAAC,oBAAoB,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QACtDA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFX,OAAA,CAACH,UAAU;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QAAA,GACrBT,QAAQ,CAAC,2BAA2B,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QAC7DA,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAGFX,OAAA;QAAKM,SAAS,EAAC,4BAA4B;QAAAC,QAAA,eACzCP,OAAA;UACEY,IAAI,EAAC,QAAQ;UACbN,SAAS,EAAC,mGAAmG;UAAAC,QAAA,EAC9G;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACR,EAAA,CA5GQF,MAAM;EAAA,QACsBH,OAAO;AAAA;AAAAiB,EAAA,GADnCd,MAAM;AA8Gf,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}